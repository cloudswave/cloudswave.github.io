[{"title":"快速搭建Flutter Android开发环境","date":"2023-11-10T10:53:31.000Z","path":"2023/11/10/43/","text":"利用github codespaces容器如：https://github.com/cloudswave/flutter_browser_app/blob/master/.devcontainer/devcontainer.json版本查询：https://github.com/sambyeol/flutter-devcontainer/pkgs/container/flutter-devcontainer项目目录下创建.devcontainer/devcontainer.json 12345678&#123; &quot;image&quot;: &quot;ghcr.io/sambyeol/flutter-devcontainer:&lt;flutter-version&gt;&quot;, &quot;runArgs&quot;: [ &quot;--init&quot; ], &quot;extensions&quot;: [ &quot;dart-code.dart-code&quot;, &quot;dart-code.flutter&quot; ],&#125; 参考：https://github.com/sambyeol/flutter-devcontainer 利用脚本1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192#!/bin/bash# 设置变量export PROJECT_PATH=`pwd`;export ANDROID_HOME=$&#123;PROJECT_PATH&#125;/env/androidexport FLUTTER_HOME=$&#123;PROJECT_PATH&#125;/env/flutterexport JAVA_HOME=$&#123;PROJECT_PATH&#125;/env/jdk-11export PUB_HOSTED_URL=https://pub.flutter-io.cnexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn# 环境变量写入到~/.bashrcecho &quot;export ANDROID_HOME=$ANDROID_HOME&quot; &gt;&gt; ~/.bashrcecho &quot;export FLUTTER_HOME=$FLUTTER_HOME&quot; &gt;&gt; ~/.bashrcecho &quot;export JAVA_HOME=$JAVA_HOME&quot; &gt;&gt; ~/.bashrcecho &quot;export PUB_HOSTED_URL=https://pub.flutter-io.cn&quot; &gt;&gt; ~/.bashrcecho &quot;export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn&quot; &gt;&gt; ~/.bashrcecho &#x27;export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools/:$&#123;FLUTTER_HOME&#125;/bin:$&#123;JAVA_HOME&#125;/bin:$PATH&#x27; &gt;&gt; ~/.bashrcsource ~/.bashrc mkdir $PROJECT_PATH/env# JAVAif test -d $JAVA_HOME; then echo &quot;$JAVA_HOME目录存在&quot;else echo &quot;安装JDK11环境&quot; cd $&#123;PROJECT_PATH&#125;/env curl -o openjdk-11_linux-x64_bin.tar.gz https://download.java.net/java/ga/jdk11/openjdk-11_linux-x64_bin.tar.gz tar xzvf openjdk-11_linux-x64_bin.tar.gz rm -rf openjdk-11_linux-x64_bin.tar.gzfi# Androidif test -d $ANDROID_HOME; then echo &quot;$ANDROID_HOME目录存在&quot;else echo &quot;安装Android环境&quot; cd $&#123;PROJECT_PATH&#125;/env mkdir $ANDROID_HOME mkdir -p $&#123;ANDROID_HOME&#125;/cmdline-tools/ cd $ANDROID_HOME/cmdline-tools/ SDK_TOOL_URL=&quot;https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip&quot;; # https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip curl -o sdk.zip $SDK_TOOL_URL unzip sdk.zip rm -rf sdk.zip mv cmdline-tools latest echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager &quot;build-tools;30.0.3&quot; echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager &quot;platforms;android-33&quot; echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager &quot;platform-tools&quot;fi# Flutterif test -d $FLUTTER_HOME; then echo &quot;$FLUTTER_HOME目录存在&quot;else echo &quot;安装Flutter环境&quot; cd $&#123;PROJECT_PATH&#125;/env curl -o flutter_linux_3.13.9-stable.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.13.9-stable.tar.xz tar xf ./flutter_linux_3.13.9-stable.tar.xz rm -rf flutter_linux_3.13.9-stable.tar.xz git config --global --add safe.directory $FLUTTER_HOME $FLUTTER_HOME/bin/flutter channel yes y |$FLUTTER_HOME/bin/flutter doctor --android-licensesfigit config --global --add safe.directory $FLUTTER_HOME# gradleif test -d $&#123;PROJECT_PATH&#125;/env/.gradle; then echo &quot;$&#123;PROJECT_PATH&#125;/env/.gradle目录存在&quot;else echo &quot;配置Gradle环境，下载离线包gradle-7.5-all.zip&quot; mkdir $&#123;PROJECT_PATH&#125;/env/.gradle cp -n $&#123;PROJECT_PATH&#125;/init.gradle $&#123;PROJECT_PATH&#125;/env/.gradle/ mkdir $&#123;PROJECT_PATH&#125;/env/.gradle/wrapper/dists cd $&#123;PROJECT_PATH&#125;/env/.gradle/wrapper/dists wget https://github.moeyy.xyz/https://github.com/gradle/gradle-distributions/releases/download/v7.5.0/gradle-7.5-all.zip # https://services.gradle.org/distributions/fi# 缓存目录迁移ln -s $&#123;PROJECT_PATH&#125;/env/.gradle ~/mkdir $&#123;PROJECT_PATH&#125;/env/.pub-cacheln -s $&#123;PROJECT_PATH&#125;/env/.pub-cache ~/cd $PROJECT_PATHmkdir workspaceecho &quot;1. 如果环境搭建成功，则不要删除env环境目录，否则可以删除env下对应环境重新搭建环境2. 如果环境变量丢失可以执行source init.sh3. 你可以将flutter项目代码存放在workspace目录中&quot;","link":"","tags":[{"name":"开发","slug":"开发","permalink":"https://cloudswave.github.io/tags/%E5%BC%80%E5%8F%91/"}]},{"title":"云南开放大学学习小助手","date":"2023-10-27T17:25:29.000Z","path":"2023/10/27/42/","text":"游猴脚本，辅助学习，可自动播放课程视频，自动提交作业等请加微信获取","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"用浏览器远程控制 Android 手机，搭建云手机","date":"2023-08-26T01:08:42.000Z","path":"2023/08/26/34/","text":"项目地址： GitHub – NetrisTV/ws-scrcpy: Web client prototype for scrcpy. docker版123# docker run --name ws-scrcpy -d -p 8000:8000 scavin/ws-scrcpydocker run --name ws-scrcpy -d --net=host scavin/ws-scrcpy # 使用--net=host 保证能访问到安卓设备docker exec ws-scrcpy adb connect 安卓IP地址:5555 # 如果使用zerotier实现内网穿透，则在zerotier后台查看分配到ip 访问：http://服务器ip:8000 Andorid手机打开网络调试 电脑安装 adb工具套件SDK Platform Tools 打开开发者模式 使用 USB 连接 Android 设备，并授权 终端输入 adb tcpip 5555 安装zerotier实现内网穿透 安卓手机直接下载zerotier app：https://www.zerotier.com/download/ 服务器端docker版123456789101112131415官方镜像：https://registry.hub.docker.com/r/bltavares/zerotier拉取镜像docker pull bltavares/zerotier配置镜像docker run --device=/dev/net/tun \\--name zerotier-one \\--net=host \\--restart=always \\--cap-add=NET_ADMIN \\--cap-add=SYS_ADMIN \\-v /var/lib/zerotier-one:/var/lib/zerotier-one \\bltavares/zerotier:latest加入zerotier网络docker exec zerotier-one zerotier-cli join [网络ID]显示 200 join ok 即添加成功 debian版：12345678910添加Zerotier存储库curl -s https://install.zerotier.com | sudo bash安装Zerotiersudo apt-get install zerotier-one启动Zerotiersudo systemctl start zerotier-one查看Zerotier状态sudo zerotier-cli status加入网络zerotier-cli join [网络ID] 也可以使用frp或者nps来实现内网穿透达到对安卓的控制参考 https://www.appinn.com/ws-scrcpy https://github.com/Genymobile/scrcpy","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"开源免费远程控制软件RustDesk","date":"2023-08-26T00:53:06.000Z","path":"2023/08/26/33/","text":"简介：目前最友好的开源远程桌面软件，开箱即用，无需任何配置，全平台支持，完美替代 TeamViewer、ToDesk、AnyDesk等开源地址：https://github.com/rustdesk软件下载地址：https://github.com/rustdesk/rustdesk/releases网页端：http://45.76.181.120:8080/#/","link":"","tags":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://cloudswave.github.io/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}]},{"title":"alist编译记录","date":"2023-02-17T03:46:51.000Z","path":"2023/02/17/29/","text":"服务器环境Linux version 3.10.0-327.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.3 20140911 (Red Hat 4.8.3-9) (GCC) ) #1 SMP Thu Nov 19 22:10:57 UTC 2015 前端123456yum install npmnpm install -g npm@9.5.0npm install pnpm -ggit clone --recursive https://github.com/alist-org/alist-web.gitcd alist-webpnpm run build 后端1234567891011121314151617181920212223242526272829303132333435yum install screenscreen -R alist # 开screen避免掉线编译中断rpm --import https://mirror.go-repo.io/centos/RPM-GPG-KEY-GO-REPOcurl -s https://mirror.go-repo.io/centos/go-repo.repo | tee /etc/yum.repos.d/go-repo.repoyum install golanggit clone https://github.com/alist-org/alist.gitcd alistvi build-local.sh # 新建一个本地编译的脚本，复制以下内容------rm -rf ./public/dist/*cp -r ../alist-web/dist ./public/ # 注意前端代码路径appName=&quot;alist&quot;builtAt=&quot;$(date +&#x27;%F %T %z&#x27;)&quot;goVersion=$(go version | sed &#x27;s/go version //&#x27;)gitAuthor=$(git show -s --format=&#x27;format:%aN &lt;%ae&gt;&#x27; HEAD)gitCommit=$(git log --pretty=format:&quot;%h&quot; -1)version=$(git describe --long --tags --dirty --always)webVersion=$(wget -qO- -t1 -T2 &quot;https://api.github.com/repos/alist-org/alist-web/releases/latest&quot; | grep &quot;tag_name&quot; | head -n 1 | awk -F &quot;:&quot; &#x27;&#123;print $2&#125;&#x27; | sed &#x27;s/\\&quot;//g;s/,//g;s/ //g&#x27;)ldflags=&quot;\\-w -s \\-X &#x27;github.com/alist-org/alist/v3/internal/conf.BuiltAt=$builtAt&#x27; \\-X &#x27;github.com/alist-org/alist/v3/internal/conf.GoVersion=$goVersion&#x27; \\-X &#x27;github.com/alist-org/alist/v3/internal/conf.GitAuthor=$gitAuthor&#x27; \\-X &#x27;github.com/alist-org/alist/v3/internal/conf.GitCommit=$gitCommit&#x27; \\-X &#x27;github.com/alist-org/alist/v3/internal/conf.Version=$version&#x27; \\-X &#x27;github.com/alist-org/alist/v3/internal/conf.WebVersion=$webVersion&#x27; \\&quot;go build -ldflags=&quot;$ldflags&quot; -----bash build-local.sh # 编译./alist admin # 查看管理员信息./alist server # 启动服务vi ./data/config.json # 可修改端口 国际化1234567891011121314151617181920212223242526272829303132333435方案1：# crowdin 环境变量配置，先去crowdin官网注册获取api-token，创建一个project获取project id# https://crowdin.com/project/alist/zh-CNexport CROWDIN_PROJECT_ID=***export CROWDIN_PERSONAL_TOKEN=***pnpm run i18n:release方案2：直接下载中文翻译文件[root@ecs-G3x6u alist]# wget https://crowdin.com/backend/download/project/alist/zh-CN.zip --no-check-certificate[root@ecs-G3x6u alist]# unzip zh-CN.zip Archive: zh-CN.zip creating: src/ creating: src/lang/ creating: src/lang/zh-CN/ inflating: src/lang/zh-CN/settings.json inflating: src/lang/zh-CN/metas.json inflating: src/lang/zh-CN/settings_other.json inflating: src/lang/zh-CN/manage.json inflating: src/lang/zh-CN/storages.json inflating: src/lang/zh-CN/login.json inflating: src/lang/zh-CN/drivers.json inflating: src/lang/zh-CN/global.json inflating: src/lang/zh-CN/users.json inflating: src/lang/zh-CN/home.json extracting: src/lang/zh-CN/index.json inflating: src/lang/zh-CN/tasks.json inflating: src/lang/zh-CN/br.json inflating: src/lang/zh-CN/indexes.json [root@ecs-G3x6u alist]# lsalist alist-web src zh-CN.zip[root@ecs-G3x6u alist]# cp -r ./src/lang/zh-CN ./alist-web/src/app/ components/ hooks/ index.d.ts lang/ main.tsx pages/ store/ types/ utils/ [root@ecs-G3x6u alist]# cp -r ./src/lang/zh-CN ./alist-web/src/lang/[root@ecs-G3x6u alist]# cd alist-web/[root@ecs-G3x6u alist-web]# node ./scripts/i18n.mjs 参考 https://alist.nn.ci/zh/guide/install/source.html https://blog.csdn.net/qq_25919879/article/details/128400309","link":"","tags":[]},{"title":"amh面板部署typecho博客后显示404错误","date":"2023-02-11T01:19:27.000Z","path":"2023/02/11/25/","text":"安装typecho完成后访问后台和文章显示404修改nginx配置：/home/wwwroot/lnmp01/vhost/typecho.conf 12345...location ~ .*\\.php(\\/.*)*$ &#123; fastcgi_pass unix:/tmp/php-cgi-lnmp01-typecho.sock;... 修改重写规则：/home/wwwroot/lnmp01/rewrite/amh.conf 123456if (-f $request_filename/index.php)&#123; rewrite (.*) $1/index.php;&#125;if (!-f $request_filename)&#123; rewrite (.*) /index.php;&#125; 重启nginx 12killall nginx/usr/local/nginx-generic-1.20/sbin/nginx","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"Termux通过Ubuntu安装AMH面板","date":"2023-01-24T19:47:50.000Z","path":"2023/01/24/21/","text":"注意先使用：uname -m查看确保手机是aarch64位架构 Termux下Atilo安装ubuntu参考：https://www.jianshu.com/p/a9b30ea2ae66 快速安装amh面板参考：http://amh.sh/install.htmubuntu下： 1export CV=[CN] DV=N &amp;&amp; wget http://dl.amh.sh/amh.sh &amp;&amp; bash amh.sh 安装成功后系统会提示面板访问地址与AMH、MySQL默认账号密码。常用配置目录： 123/usr/local/amh-7.0/etc//usr/local/amh-7.0/vhost//home/wwwroot/lnmp01/vhost/ 常用命令： 1234567891011121314启动Nginx: amh nginx start停止Nginx: amh nginx stop重载Nginx: amh nginx reload重启Nginx: amh nginx restart启动MySQL: amh mysql start停止MySQL: amh mysql stop重载MySQL: amh mysql reload重启MySQL: amh mysql restart强制重载MySQL: amh mysql force-reload启动PHP: amh php start [主标识域名]停止PHP: amh php stop [主标识域名]强行停止PHP: amh php force-quit [主标识域名]重启PHP: amh php restart [主标识域名]重载PHP: amh php reload [主标识域名] 错误处理记录 面板8888端口无法访问主页，amh nginx restart 看报错信息，发现ssl证书无法加载，80端口无法使用123nginx: [emerg] cannot load certificate &quot;/usr/local/amh-7.0/etc/ssl/amh.crt&quot;: BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen(&#x27;/usr/local/amh-7.0/etc/ssl/amh.crt&#x27;,&#x27;r&#x27;) error:2006D080:BIO routines:BIO_new_file:no such file)nginx: [emerg] bind() to 0.0.0.0:80 failed (13: Permission denied) 修改/usr/local/amh-7.0/vhost/amh-nginx.conf移除9999端口服务器配置部分 修改/home/wwwroot/lnmp01/vhost/0.0.0.0.conf，将80端口改成1024以上比如1025","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"Termux通过ubuntu安装宝塔面板","date":"2023-01-23T11:31:56.000Z","path":"2023/01/23/20/","text":"Termux下Atilo安装ubuntuubuntu或者debian支持64或者32位架构cpu参考：https://www.jianshu.com/p/a9b30ea2ae66 安装宝塔uname -m查看cpu架构，aarch64代表64位参考：https://gitee.com/pdusb/pdusb-fast-btpanel64位ubuntu下： 12345678git clone https://gitee.com/pdusb/pdusb-fast-btpanel.gitcd pdusb-fast-btpanel./pdbolt-inst-bt-acel.shbash /tmp/btp/pdbolt-bt-install/install.sh/etc/init.d/bt restart# 进入宝塔工具面板，可查看修改端口和密码bt 32位ubuntu或者debian只能安装5.9版面板, python2.7： 12apt-get install python-setuptoolswget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh 参考宝塔(BT-Panel) Linux 面板 5.9 开心版教程玩客云安装宝塔面板5.9 错误处理记录 ERROR: cannot verify download.bt.cn’s certificate, issued by ‘CN=sslTrus (RSA) OV CA,O=sslTrus,C=CN’: Unable to locally verify the issuer’s authority. To connect to download.bt.cn insecurely, use `–no-check-certificate’ ERROR: Download python env fielded.关闭证书验证：echo “check_certificate = off” &gt;&gt; ~/.wgetrc 报错chmod: cannot access ‘/tmp/btp/pyenv/bin/python3.7’: Operation not permitted… 123456...root@localhost:~/pdusb-fast-btpanel# chmod 777 /tmp/btp/pyenv/bin/ -Rchmod: cannot access &#x27;/tmp/btp/pyenv/bin/python3.7&#x27;: Operation not permittedchmod: cannot access &#x27;/tmp/btp/pyenv/bin/.l2s.python3.70001&#x27;: Operation not permittedchmod: cannot access &#x27;/tmp/btp/pyenv/bin/python3.7m&#x27;: Operation not permitted... 解压pyenv-ubuntu2004-3.7.8-aarch64.tar.xz出错导致，重新解压后替换出错文件 宝塔启动失败 12345678...Traceback (most recent call last): File &quot;/www/server/panel/BT-Panel&quot;, line 27, in &lt;module&gt; from BTPanel import app,sys,public File &quot;/www/server/panel/BTPanel/__init__.py&quot;, line 11, in &lt;module&gt; import jsonModuleNotFoundError: No module named &#x27;json&#x27;... 权限修复：chmod 777 -R /www ubuntu bash报错：groups: cannot find name for group ID *** 12345groups: cannot find name for group ID 1015groups: cannot find name for group ID 1028groups: cannot find name for group ID 3003groups: cannot find name for group ID 9997groups: cannot find name for group ID 50062 termux在安装ubuntu运行的时候出现了goups: cannot find name for group ID，由于termux安装ubuntu后没有给原本Android的系统用户组赋予名称导致, 解决办法： 12345echo &quot;1015:x:1015:1028:x:1028:3003:x:3003:50062:x:50062:9997:x:9997:&quot; &gt;&gt;/etc/group 参考 宝塔安装报错：ImportError: No module named setuptools阅读install.sh脚本，把已经执行过的命令注释，排查哪行命令报错，执行的时候发现宝塔需要使用python2.7的pip，而apt命令安装的pip会安装到python3里了。 123curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py python2 get-pip.py然后将pip命令链接到bin目录下 启动宝塔成功，但是无法显示登录页，显示500错误查看宝塔的/etc/init.d/bt 脚本，尝试找到错误日志保存路径如下，cat /tmp/panelBoot.pl ，发现cp: cannot create regular file ‘/dev/shm/session.db’，修改/www/server/panel/main.py, 把/dev/shm/session.db路径修改成/tmp/session.db 1nohup python main.pyc `cat data/port.pl` &gt; /tmp/panelBoot.pl 2&gt;&amp;1 &amp;","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"安卓5下Termux通过ubuntu安装alist","date":"2023-01-23T01:43:42.000Z","path":"2023/01/23/19/","text":"安卓7以上可以直接通过pkg install alist来安装alist，安卓5安装ubuntu需要64位termux，通过Atilo套娃其他linux来安装alist 安装termux下： 1234567apt install tmuxecho &quot;deb [trusted=yes arch=all] https://yadominjinta.github.io/files/ termux extras&quot; &gt;&gt; $PREFIX/etc/apt/sources.list.d/atilo.listapt update &amp;&amp; apt install atilo-cnatilo images #可以安装的镜像列表atilo pull ubuntuls ~/.atilo #可以备份该路径以便日后有问题恢复系统atilo run ubuntu #启动进入ubuntu ubuntu下： 12345apt install curlapt install tmuxcurl -fsSL &quot;https://alist.nn.ci/v3.sh&quot; | bash -s install/opt/alist/alist admin #查看密码/opt/alist/alist server Atilo介绍： 123456789101112131415161718192021Atilo 是一个用来帮助你在termux上安装不同的GNU/Linux发行版的程序命令:images 列出可用镜像remove 移除本地的镜像pull 拉取远程的镜像run 运行镜像clean 清除缓存help 帮助$ atilo images+----------+------------+--------+--------+| 名称 | 版本 | 已安装 | 可安装 |+----------+------------+--------+--------+| alpine | 3.12 | False | True || centos | 8 | False | True || debian | buster | False | True || fedora | 33 | False | True || kali | latest | False | True || opensuse | Tumbleweed | False | True || ubuntu | focal | False | True |+----------+------------+--------+--------+ 自启配置termux下： 12echo &quot;~/startup.sh&quot; &gt;&gt; ~/.bashrcecho &quot;~/startup.sh&quot; &gt;&gt; ~/.atilo/ubuntu/root/.bashrc vi ~/startup.sh增加： 1234567if pgrep -f &quot;ubuntu&quot; &gt;/dev/null then echo &quot;ubuntu运行中...&quot; else tmux new -d -s ubuntu &#x27;atilo run ubuntu&#x27; echo &quot;ubuntu已开启...&quot;fi vi ~/.atilo/ubuntu/root/startup.sh： 1234567if pgrep -x &quot;alist&quot; &gt;/dev/null then echo &quot;alist运行中...&quot; else tmux new -d -s alist &#x27;/opt/alist/alist server&#x27; echo &quot;alist已开启...&quot;fi","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"联想乐檬k3刷安卓5.1教程","date":"2023-01-22T09:58:10.000Z","path":"2023/01/22/18/","text":"操作快捷键 三键进recovery: 电源键+音量加+音量减 进入fastboot: 电源键+音量减 官方更多选择菜单：电源键+音量减 高通刷机：按住音量加+音量减然后插电脑usb，设备管理器会显示高通端口 刷机包下载: https://pan.baidu.com/s/1tnf2xMoqtcL6p50ZiRYICw 提取码:agjm提示： 如果插电脑usb后供电不足反复重启，则电池触点正负极接线后使用充电宝供电 线刷5.1底包联想乐檬K3安卓5.0以上底层线刷包.rar中有线刷文件，驱动和工具线刷工具使用参考：http://m.rom.7to.cn/jiaochengdetail/4292 先将官方刷机包解压到电脑上，然后再将刷机工具也解压，然后进入工具目录，找到并双击运行升级工具“QcomDLoader.exe”, 点击工具左侧的第一个按钮，也就是port上面那个齿轮按钮，点击后如下所示找到解压好的固件文件夹。 再点击工具左侧第二个按钮，也就是两个齿轮的按钮，弹出配置框，会看到框里有三个文件都在我们刚刚加载好的文件包中，这里默认不需要修改。所以点击OK即可： 点击左边第三个按钮，也就是一个箭头的按钮，点击之后，将手机关机，同时按住音量上键和下键不放，连接上电脑。走动进度条后松开两键，如下图 线刷升级过程中请不要触碰手机和数据线，升级时间一般为5分钟左右，请根据实际情况而定，线刷成功后如下图所示：再拔掉数据线，重装电池开机即可! 卡刷魔趣5.1-64位系统 线刷后，三键会进入到自带的奇兔recovery，双清格式化data分区 连接电脑后可以看到k30设备，将卡刷包乐檬k3-卡刷魔趣android-5.1刷机包.zip复制到设备中 recovery点击安装刚复制的卡刷包 显示完毕后重启手机 scrcpy远程控制手机参考：https://blog.csdn.net/liuqinhou/article/details/127460195 12adb connect 192.168.153.243 # 手机ipscrcpy -b5M -m720 -Sw Action 快捷键 快捷键 (macOS) 切换全屏模式 Ctrl+f Cmd+f 向左旋转屏幕 Ctrl+← (left) Cmd+← (left) 向右旋转屏幕 Ctrl+→ (right) Cmd+→ (right) 将窗口大小调整为1:1 Ctrl+g Cmd+g 调整窗口大小以移除黑色边框 Ctrl+x | Double-click¹ Cmd+x | Double-click¹ 点击 HOME Ctrl+h | Middle-click Ctrl+h | Middle-click 点击 BACK Ctrl+b | Right-click² Cmd+b | Right-click² 点击 APP_SWITCH Ctrl+s Cmd+s 点击 MENU Ctrl+m Ctrl+m 点击 VOLUME_UP Ctrl+↑ (up) Cmd+↑ (up) 点击 VOLUME_DOWN Ctrl+↓ (down) Cmd+↓ (down) 点击 POWER Ctrl+p Cmd+p 开机 Right-click² Right-click² 关闭设备屏幕 Ctrl+o Cmd+o 点亮设备屏幕 Ctrl+Shift+o Cmd+Shift+o 旋转设备屏幕 Ctrl+r Cmd+r 展开通知面板 Ctrl+n Cmd+n 折叠通知面板 Ctrl+Shift+n Cmd+Shift+n 将设备剪贴板复制到计算机 Ctrl+c Cmd+c 将电脑剪贴板粘贴到设备上 Ctrl+v Cmd+v 将计算机剪贴板复制到设备并粘贴 Ctrl+Shift+v Cmd+Shift+v 启用/禁用帧率显示 Ctrl+i Cmd+i 安卓5安装termux 参考Termux-on-android-5-or-6 最新版本下载地址 64位termux-app_v0.118.0+be66cff-apt-android-5-github-debug_arm64-v8a.zip - 蓝奏云 32位termux-app_v0.118.0+be66cff-apt-android-5-github-debug_armeabi-v7a.zip - 蓝奏云 利用Atilo安装ubuntu或debian和alist提示：安装ubuntu需要64位termux，安卓5的termux无法直接通过pkg install alist来安装alist，故需要通过其他linux安装 1234567891011echo &quot;deb [trusted=yes arch=all] https://yadominjinta.github.io/files/ termux extras&quot; &gt;&gt; $PREFIX/etc/apt/sources.list.d/atilo.listapt update &amp;&amp; apt install atilo-cnatilo images #可以安装的镜像列表atilo pull ubuntuls ~/.atilo #可以备份该路径以便日后有问题恢复系统atilo run ubuntu# 以下为ubuntu下命令apt install curlcurl -fsSL &quot;https://alist.nn.ci/v3.sh&quot; | bash -s install/opt/alist/alist admin/opt/alist/alist server Atilo 是一个用来帮助你在termux上安装不同的GNU/Linux发行版的程序 12345678910111213141516171819命令:images 列出可用镜像remove 移除本地的镜像pull 拉取远程的镜像run 运行镜像clean 清除缓存help 帮助$ atilo images+----------+------------+--------+--------+| 名称 | 版本 | 已安装 | 可安装 |+----------+------------+--------+--------+| alpine | 3.12 | False | True || centos | 8 | False | True || debian | buster | False | True || fedora | 33 | False | True || kali | latest | False | True || opensuse | Tumbleweed | False | True || ubuntu | focal | False | True |+----------+------------+--------+--------+","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"nginx和php-fpm以root用户运行","date":"2022-12-11T00:53:54.000Z","path":"2022/12/11/15/","text":"开启root权限，请谨慎使用！！！为了使KodExplorer能读写root用户数据需要修改nginx，php-fpm运行用户为root，下面为修改笔记 nginx version: nginx/1.18.0 (Ubuntu) PHP 8.1 sudo vi /etc/nginx/nginx.conf 12user root; #第一行... sudo vi /etc/php/8.1/fpm/pool.d/www.conf 1234567...# 修改两处listen.owner = rootlisten.group = root...user = rootgroup = root sudo vi /lib/systemd/system/php8.1-fpm.service 1234567# 加上-R允许root执行...ExecStart=/usr/sbin/php-fpm8.1 -R --nodaemonize --fpm-config /etc/php/8.1/fpm/php-fpm.conf...````防火墙问题可能导致80端口无法访问 如果外网无法访问请关闭防火墙或者添加规则service iptables stopiptables -I INPUT -p tcp –dport 80 -j ACCEPT 12重启服务 systemctl daemon-reload # php8.1-fpm.service修改刷新/etc/init.d/php8.1-fpm restart/etc/init.d/nginx restart check php8.1-fpm.sock是否生成ls /run/php/```","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"给rm增加回收站，安全的使用rm命令","date":"2022-12-10T06:28:45.000Z","path":"2022/12/10/13/","text":"12345678910111213141516171819202122232425262728293031#!/usr/bin/env bash## Description: 给rm命令增加回收站# System Required: CentOS/Debian/Ubuntu# Version: 1.0.0cat &gt; /usr/local/bin/rm.sh &lt;&lt; &#x27;EOF&#x27;#!/bin/bash RECYCLE=~/.local/share/Trash/filestest ! -d $&#123;RECYCLE&#125; &amp;&amp; mkdir -p $&#123;RECYCLE&#125; #if not trash folder,create one _datedir=`date +&quot;%Y%m%d&quot;` _dstdir=$&#123;RECYCLE&#125;/$&#123;_datedir&#125; test ! -d $&#123;_dstdir&#125; &amp;&amp; mkdir -p $&#123;_dstdir&#125; #if not trash folder,create one for _parms in $* do if [ -d $&#123;_parms&#125; ] || [ -f $&#123;_parms&#125; ];then test -d $&#123;_parms&#125; &amp;&amp; echo &quot;$&#123;_parms&#125; is directory&quot; &amp;&amp; mv $&#123;_parms&#125; $&#123;_dstdir&#125;/ test -f $&#123;_parms&#125; &amp;&amp; echo &quot;$&#123;_parms&#125; is file&quot; &amp;&amp; mv $&#123;_parms&#125; $&#123;_dstdir&#125;/ else echo &quot;$&#123;_parms&#125; is not directory or file&quot; fi doneEOFchmod +x /usr/local/bin/rm.shecho &quot;alias rm=&#x27;/usr/local/bin/rm.sh&#x27;&quot; &gt;&gt; ~/.bashrcecho &quot;alias surm=&#x27;/bin/rm -i&#x27;&quot; &gt;&gt; ~/.bashrcecho &quot;alias rmt=&#x27;/bin/rm -i -r ~/.local/share/Trash/files/*&#x27;&quot; &gt;&gt; ~/.bashrc # 一键清理回收站命令: rmt -fsource ~/.bashrc","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"docker版alist和aria2配合使用","date":"2022-12-08T23:51:55.000Z","path":"2022/12/08/12/","text":"12345678910111213141516171819docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 --name=&quot;alist&quot; xhofe/alist:latestdocker run -d \\--name aria2 \\--restart unless-stopped \\--log-opt max-size=1m \\-e PUID=$UID \\-e PGID=$GID \\-e UMASK_SET=022 \\-e RPC_SECRET=pac_password \\-e RPC_PORT=6800 \\-e LISTEN_PORT=6888 \\-p 16800:6800 \\-p 16888:6888 \\-p 16888:6888/udp \\-v /root/aria2/config:/config \\-v /etc/alist/temp/downloads:/downloads \\-v /etc/alist/temp/aria2:/opt/alist/data/temp/aria2 \\p3terx/aria2-pro -v /etc/alist/temp/aria2:/opt/alist/data/temp/aria2 注意这个地方是为了让离线下载路径可以共享，并且只能在同一台服务器上否则离线下载后复制到某个存储下面时会报transfer失败参考：https://alist.nn.ci/zh/guide/install/docker.html","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"finalshell配置备份同步","date":"2022-12-04T05:56:38.000Z","path":"2022/12/04/11/","text":"备份同步以下文件： 1234/Users/$USER/Library/FinalShell/conn//Users/$USER/Library/FinalShell/config.json/Users/$USER/Library/FinalShell/knownhosts.json/Users/$USER/Library/FinalShell/config.json/conn #服务器连接信息配置文件夹config.json #基本配置文件knownhosts.json #服务器密钥tconfig.json #一些缓存","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"禁用win10自动更新","date":"2022-11-12T01:06:30.000Z","path":"2022/11/12/9/","text":"管理员运行cmd： 123takeown /F C:\\Windows\\SoftwareDistribution /A /RIcacls C:\\Windows\\SoftwareDistribution /deny system:(OI)(CI)(W)Icacls C:\\Windows\\SoftwareDistribution /deny &quot;ALL APPLICATION PACKAGES:(OI)(CI)(W)&quot;","link":"","tags":[{"name":"搞机","slug":"搞机","permalink":"https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"}]},{"title":"Github issue update Api","date":"2022-10-30T00:58:00.000Z","path":"2022/10/30/8/","text":"Github issue update js api: 123456789101112131415161718192021// Octokit.js// https://github.com/octokit/core.js#readmeconst octokit = new Octokit(&#123; auth: &#x27;YOUR-TOKEN&#x27;&#125;)await octokit.request(&#x27;PATCH /repos/&#123;owner&#125;/&#123;repo&#125;/issues/&#123;issue_number&#125;&#x27;, &#123; owner: &#x27;OWNER&#x27;, repo: &#x27;REPO&#x27;, issue_number: &#x27;ISSUE_NUMBER&#x27;, title: &#x27;Found a bug&#x27;, body: &#x27;I\\&#x27;m having a problem with this.&#x27;, assignees: [ &#x27;octocat&#x27; ], milestone: 1, state: &#x27;open&#x27;, labels: [ &#x27;bug&#x27; ]&#125;) https://docs.github.com/cn/rest/issues/issues#update-an-issue","link":"","tags":[]},{"title":"How to get and save the CSDN cookie as the secret","date":"2022-10-29T08:52:48.000Z","path":"2022/10/29/6/","text":"Press FN + F12 to the Dev Tools and select the network Login the CSDN Blog Find the Cookie Copy the Cookie and save to the Repo Secrets Setting page","link":"","tags":[{"name":"Guide","slug":"Guide","permalink":"https://cloudswave.github.io/tags/Guide/"}]},{"title":"CSDN博客接口分析","date":"2022-10-29T05:39:06.000Z","path":"2022/10/29/5/","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192var config = require(&quot;./mcConfig&quot;);var request = require(&#x27;request&#x27;);var querystring = require(&#x27;querystring&#x27;);function createPost(oPost) &#123; var url = &quot;https://mp.csdn.net/mdeditor/saveArticle&quot;; var oBody = &#123; title: oPost.title, markdowncontent: oPost.body, tags:&quot;Fiori&quot;, categories:&quot;Fiori&quot;, channel:&quot;14&quot;, type:&quot;original&quot;, articleedittype:&quot;1&quot;, content: oPost.body &#125;;var formData = querystring.stringify(oBody);var contentLength = formData.length;var createPostOptions = &#123; url: url, method: &quot;POST&quot;, headers: &#123; &quot;content-type&quot;: &quot;application/x-www-form-urlencoded&quot;, &quot;Content-Length&quot;: contentLength, &quot;origin&quot; :&quot;https://mp.csdn.net&quot;, &quot;referer&quot; :&quot;https://mp.csdn.net/mdeditor&quot;, &quot;User-Agent&quot; :&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36&quot;, &quot;cookie&quot;: config.cookie &#125;, body: formData&#125;; return new Promise(function(resolve,reject)&#123; var requestC = request.defaults(&#123;jar: true&#125;); console.log(&quot;Step1: create post via url: &quot; url ); requestC(createPostOptions,function(error,response,body)&#123; if(error)&#123; reject(error); &#125; console.log(&quot;response: &quot; body); resolve(body); &#125;); &#125;);&#125;module.exports = createPost;var request = require(&#x27;request&#x27;);function getIssue(issueNumber) &#123; var url = &quot;https://api.github.com/repos/i042416/KnowlegeRepository/issues/&quot; issueNumber; var getIssueOptions = &#123; url: url, method: &quot;GET&quot;, json:true, headers: &#123; &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36&quot; &#125; &#125;; return new Promise(function(resolve,reject)&#123; var requestC = request.defaults(&#123;jar: true&#125;); console.log(&quot;Step1: get issue detail via url: &quot; url ); requestC(getIssueOptions,function(error,response,body)&#123; if(error)&#123; console.log(&quot;error occurred: &quot; error); reject(error); &#125; console.log(&quot;title:&quot; body.title); console.log(&quot;body: &quot; body.body); for( var i = 0; i &lt; body.labels.length; i )&#123; console.log(&quot;label: &quot; body.labels[i].name); &#125; resolve(body); &#125;); &#125;);&#125;module.exports = getIssue;var readIssue = require(&quot;./readIssueMod&quot;);var createPost = require(&quot;./createPostMod&quot;);readIssue(2215).then(createPost).catch((error)=&gt;&#123;console.log(&quot;error: &quot; error)&#125;); https://www.jianshu.com/p/ae4fe3c6ccf7","link":"","tags":[{"name":"随笔","slug":"随笔","permalink":"https://cloudswave.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"开始使用Github Issues写博客","date":"2022-10-28T11:05:23.000Z","path":"2022/10/28/4/","text":"背景 简书频繁下架文章，每天只能发布两篇 CSDN页面太杂，写作不够专注，客户端不好用 Github Web版和App都非常简洁实用，可以随意写文章不需要担心审核问题 可以通过Actions工作流来同步文章到Github Pages和其他博客平台 学习Github Action开发，学习机遇Github到自动化构建部署流程 需求和实现自动生成README目录仿照.github/workflows/issue2readme.yaml在仓库里增加workflows配置文件进行修改，说明文档，最后生成效果 自动构建Hexo发布到Github Pages仿照.github/workflows/issue2hexo.yaml在仓库里增加workflows配置文件，根据自身情况修改环境变量，最后发布的效果可查看我的Hexo博客 12345env: # github pages repo PUBLISH_REPOSITORY: cloudswave/cloudswave.github.io # GITHUB TOKEN 可以试一试将secrets.BLOG_TOKEN可以直接改成github内置的密钥secrets.BLOG_TOKEN，但是我的会报如下图的权限错误 GITHUB_TOKEN: $&#123;&#123; secrets.BLOG_TOKEN &#125;&#125; BLOG_TOKEN生成指导： creating-a-personal-access-token-classic不知道选那些权限选择的时候全部选上吧 creating-encrypted-secrets-for-a-repository 另外还需要Pages仓库的权限配置，如下图： 自动发布文章到其他博客平台用来引流 发布到CSDN, 参考issue2csdn增加workflows配置文件，说明文档 提示如果你只想在issue添加Miestone为publish的时候才发布更新，可以修改yml里的触发器，如： 12345on: issues: # Sufficient to trigger this workflow when an issue is milestoned types: [milestoned] # types: [unlabeled, labeled, edited, milestoned] 可以在Actions页面查看workflow执行日志和禁止某个workflow执行 参考文档 https://github.com/Solybum/hexo-deploy https://github.com/zenghongtu/github-issue-to-hexo https://github.com/onblog/BlogHelper https://github.com/JoeyBling/yilia-plus-demo","link":"","tags":[{"name":"Top","slug":"Top","permalink":"https://cloudswave.github.io/tags/Top/"}]},{"title":"测试issue2blog","date":"2022-10-28T03:37:45.000Z","path":"2022/10/28/1/","text":"标题一级标题: # 标题二级标题: ## 标题三级标题: ### 标题四级标题: #### 标题五级标题: #### 标题 加粗加粗 图片 超链接百度 斜体斜体 粗斜体粗斜体 代码块1code. 分割线Hello","link":"","tags":[{"name":"测试","slug":"测试","permalink":"https://cloudswave.github.io/tags/%E6%B5%8B%E8%AF%95/"}]}]