<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EthanZhu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cloudswave.github.io/"/>
  <updated>2024-04-12T17:17:18.000Z</updated>
  <id>https://cloudswave.github.io/</id>
  
  <author>
    <name>EthanZhu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>快速搭建Flutter Android开发环境</title>
    <link href="https://cloudswave.github.io/2023/11/10/43/"/>
    <id>https://cloudswave.github.io/2023/11/10/43/</id>
    <published>2023-11-10T10:53:31.000Z</published>
    <updated>2024-04-12T17:17:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用github-codespaces容器"><a href="#利用github-codespaces容器" class="headerlink" title="利用github codespaces容器"></a>利用github codespaces容器</h1><p>如：<a href="https://github.com/cloudswave/flutter_browser_app/blob/master/.devcontainer/devcontainer.json">https://github.com/cloudswave/flutter_browser_app/blob/master/.devcontainer/devcontainer.json</a><br>版本查询：<a href="https://github.com/sambyeol/flutter-devcontainer/pkgs/container/flutter-devcontainer">https://github.com/sambyeol/flutter-devcontainer/pkgs/container/flutter-devcontainer</a><br>项目目录下创建.devcontainer/devcontainer.json</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;image&quot;: &quot;ghcr.io/sambyeol/flutter-devcontainer:&lt;flutter-version&gt;&quot;,</span><br><span class="line">    &quot;runArgs&quot;: [ &quot;--init&quot; ],</span><br><span class="line">    &quot;extensions&quot;: [</span><br><span class="line">        &quot;dart-code.dart-code&quot;,</span><br><span class="line">        &quot;dart-code.flutter&quot;</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：<a href="https://github.com/sambyeol/flutter-devcontainer">https://github.com/sambyeol/flutter-devcontainer</a></p><h1 id="利用脚本"><a href="#利用脚本" class="headerlink" title="利用脚本"></a>利用脚本</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 设置变量</span><br><span class="line">export PROJECT_PATH=`pwd`;</span><br><span class="line">export ANDROID_HOME=$&#123;PROJECT_PATH&#125;/env/android</span><br><span class="line">export FLUTTER_HOME=$&#123;PROJECT_PATH&#125;/env/flutter</span><br><span class="line">export JAVA_HOME=$&#123;PROJECT_PATH&#125;/env/jdk-11</span><br><span class="line">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class="line">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class="line"></span><br><span class="line"># 环境变量写入到~/.bashrc</span><br><span class="line">echo &quot;export ANDROID_HOME=$ANDROID_HOME&quot; &gt;&gt;  ~/.bashrc</span><br><span class="line">echo &quot;export FLUTTER_HOME=$FLUTTER_HOME&quot; &gt;&gt;  ~/.bashrc</span><br><span class="line">echo &quot;export JAVA_HOME=$JAVA_HOME&quot; &gt;&gt;  ~/.bashrc</span><br><span class="line">echo &quot;export PUB_HOSTED_URL=https://pub.flutter-io.cn&quot; &gt;&gt;  ~/.bashrc</span><br><span class="line">echo &quot;export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn&quot; &gt;&gt;  ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools/:$&#123;FLUTTER_HOME&#125;/bin:$&#123;JAVA_HOME&#125;/bin:$PATH&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source  ~/.bashrc</span><br><span class="line"></span><br><span class="line"> mkdir $PROJECT_PATH/env</span><br><span class="line"></span><br><span class="line"># JAVA</span><br><span class="line">if test -d $JAVA_HOME; then</span><br><span class="line">    echo &quot;$JAVA_HOME目录存在&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;安装JDK11环境&quot;</span><br><span class="line">    cd $&#123;PROJECT_PATH&#125;/env</span><br><span class="line">    curl -o openjdk-11_linux-x64_bin.tar.gz https://download.java.net/java/ga/jdk11/openjdk-11_linux-x64_bin.tar.gz</span><br><span class="line">    tar xzvf openjdk-11_linux-x64_bin.tar.gz</span><br><span class="line">    rm -rf openjdk-11_linux-x64_bin.tar.gz</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># Android</span><br><span class="line">if test -d $ANDROID_HOME; then</span><br><span class="line">    echo &quot;$ANDROID_HOME目录存在&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;安装Android环境&quot;</span><br><span class="line">    cd $&#123;PROJECT_PATH&#125;/env</span><br><span class="line">    mkdir $ANDROID_HOME</span><br><span class="line">    mkdir -p $&#123;ANDROID_HOME&#125;/cmdline-tools/</span><br><span class="line">    cd $ANDROID_HOME/cmdline-tools/</span><br><span class="line">    SDK_TOOL_URL=&quot;https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip&quot;;</span><br><span class="line">    # https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip</span><br><span class="line">    curl -o sdk.zip $SDK_TOOL_URL</span><br><span class="line">    unzip sdk.zip</span><br><span class="line">    rm -rf sdk.zip</span><br><span class="line">    mv cmdline-tools latest</span><br><span class="line">    echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager &quot;build-tools;30.0.3&quot;</span><br><span class="line">    echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager &quot;platforms;android-33&quot;</span><br><span class="line">    echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager &quot;platform-tools&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Flutter</span><br><span class="line">if test -d $FLUTTER_HOME; then</span><br><span class="line">    echo &quot;$FLUTTER_HOME目录存在&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;安装Flutter环境&quot;</span><br><span class="line">    cd $&#123;PROJECT_PATH&#125;/env</span><br><span class="line">    curl -o flutter_linux_3.13.9-stable.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.13.9-stable.tar.xz</span><br><span class="line">    tar xf ./flutter_linux_3.13.9-stable.tar.xz</span><br><span class="line">    rm -rf flutter_linux_3.13.9-stable.tar.xz</span><br><span class="line">    git config --global --add safe.directory $FLUTTER_HOME</span><br><span class="line">    $FLUTTER_HOME/bin/flutter channel</span><br><span class="line">    yes y |$FLUTTER_HOME/bin/flutter doctor --android-licenses</span><br><span class="line">fi</span><br><span class="line">git config --global --add safe.directory $FLUTTER_HOME</span><br><span class="line"></span><br><span class="line"># gradle</span><br><span class="line">if test -d $&#123;PROJECT_PATH&#125;/env/.gradle; then</span><br><span class="line">    echo &quot;$&#123;PROJECT_PATH&#125;/env/.gradle目录存在&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;配置Gradle环境，下载离线包gradle-7.5-all.zip&quot;</span><br><span class="line">    mkdir $&#123;PROJECT_PATH&#125;/env/.gradle</span><br><span class="line">    cp -n $&#123;PROJECT_PATH&#125;/init.gradle $&#123;PROJECT_PATH&#125;/env/.gradle/</span><br><span class="line">    mkdir $&#123;PROJECT_PATH&#125;/env/.gradle/wrapper/dists</span><br><span class="line">    cd $&#123;PROJECT_PATH&#125;/env/.gradle/wrapper/dists</span><br><span class="line">    wget https://github.moeyy.xyz/https://github.com/gradle/gradle-distributions/releases/download/v7.5.0/gradle-7.5-all.zip # https://services.gradle.org/distributions/</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 缓存目录迁移</span><br><span class="line">ln -s $&#123;PROJECT_PATH&#125;/env/.gradle ~/</span><br><span class="line">mkdir $&#123;PROJECT_PATH&#125;/env/.pub-cache</span><br><span class="line">ln -s $&#123;PROJECT_PATH&#125;/env/.pub-cache ~/</span><br><span class="line"></span><br><span class="line">cd $PROJECT_PATH</span><br><span class="line">mkdir workspace</span><br><span class="line">echo &quot;</span><br><span class="line">1. 如果环境搭建成功，则不要删除env环境目录，否则可以删除env下对应环境重新搭建环境</span><br><span class="line">2. 如果环境变量丢失可以执行source init.sh</span><br><span class="line">3. 你可以将flutter项目代码存放在workspace目录中</span><br><span class="line">&quot;</span><br></pre></td></tr></table></figure><!--csdn-article-id:137705995-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;利用github-codespaces容器&quot;&gt;&lt;a href=&quot;#利用github-codespaces容器&quot; class=&quot;headerlink&quot; title=&quot;利用github codespaces容器&quot;&gt;&lt;/a&gt;利用github codespaces容器&lt;/
      
    
    </summary>
    
    
      <category term="开发" scheme="https://cloudswave.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>云南开放大学学习小助手</title>
    <link href="https://cloudswave.github.io/2023/10/27/42/"/>
    <id>https://cloudswave.github.io/2023/10/27/42/</id>
    <published>2023-10-27T17:25:29.000Z</published>
    <updated>2023-10-27T17:26:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>游猴脚本，辅助学习，可自动播放课程视频，自动提交作业等<br>请加微信获取<br><img src="https://nfile.webnotepad.net/uploads/20231028/9b092f6862649029f1c8392b68c080c6.png" width="30%"><br><img src="https://nfile.webnotepad.net/uploads/20231028/c46b9f14420ca87bad1d7d5bcc87dea3.jpg" width="60%"></p><!--csdn-article-id:134087533-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;游猴脚本，辅助学习，可自动播放课程视频，自动提交作业等&lt;br&gt;请加微信获取&lt;br&gt;&lt;img src=&quot;https://nfile.webnotepad.net/uploads/20231028/9b092f6862649029f1c8392b68c080c6.png&quot; wi
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>用浏览器远程控制 Android 手机，搭建云手机</title>
    <link href="https://cloudswave.github.io/2023/08/26/34/"/>
    <id>https://cloudswave.github.io/2023/08/26/34/</id>
    <published>2023-08-26T01:08:42.000Z</published>
    <updated>2023-08-30T16:07:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>项目地址： <a href="https://github.com/NetrisTV/ws-scrcpy">GitHub – NetrisTV/ws-scrcpy: Web client prototype for scrcpy.</a></p><h3 id="docker版"><a href="#docker版" class="headerlink" title="docker版"></a>docker版</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker run --name ws-scrcpy -d -p 8000:8000 scavin/ws-scrcpy</span><br><span class="line">docker run --name ws-scrcpy -d --net=host  scavin/ws-scrcpy   # 使用--net=host 保证能访问到安卓设备</span><br><span class="line">docker exec ws-scrcpy adb connect 安卓IP地址:5555 # 如果使用zerotier实现内网穿透，则在zerotier后台查看分配到ip</span><br></pre></td></tr></table></figure><p>访问：http://服务器ip:8000<br><img width="945" alt="image" src="https://github.com/cloudswave/blog/assets/5915548/261e036f-4e9d-4878-8ea8-bf603866cf64"></p><h3 id="Andorid手机打开网络调试"><a href="#Andorid手机打开网络调试" class="headerlink" title="Andorid手机打开网络调试"></a>Andorid手机打开网络调试</h3><ul><li>电脑安装 adb工具套件<a href="https://developer.android.com/studio/releases/platform-tools">SDK Platform Tools</a></li><li>打开开发者模式</li><li>使用 USB 连接 Android 设备，并授权</li><li>终端输入 adb tcpip 5555</li></ul><h3 id="安装zerotier实现内网穿透"><a href="#安装zerotier实现内网穿透" class="headerlink" title="安装zerotier实现内网穿透"></a>安装zerotier实现内网穿透</h3><ul><li>安卓手机直接下载zerotier app：<a href="https://www.zerotier.com/download/">https://www.zerotier.com/download/</a></li><li>服务器端docker版<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">官方镜像：https://registry.hub.docker.com/r/bltavares/zerotier</span><br><span class="line">拉取镜像</span><br><span class="line">docker pull bltavares/zerotier</span><br><span class="line">配置镜像</span><br><span class="line">docker run --device=/dev/net/tun \</span><br><span class="line">--name zerotier-one \</span><br><span class="line">--net=host \</span><br><span class="line">--restart=always \</span><br><span class="line">--cap-add=NET_ADMIN \</span><br><span class="line">--cap-add=SYS_ADMIN \</span><br><span class="line">-v /var/lib/zerotier-one:/var/lib/zerotier-one \</span><br><span class="line">bltavares/zerotier:latest</span><br><span class="line">加入zerotier网络</span><br><span class="line">docker exec zerotier-one zerotier-cli join [网络ID]</span><br><span class="line">显示 200 join ok 即添加成功</span><br></pre></td></tr></table></figure>debian版：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">添加Zerotier存储库</span><br><span class="line">curl -s https://install.zerotier.com | sudo bash</span><br><span class="line">安装Zerotier</span><br><span class="line">sudo apt-get install zerotier-one</span><br><span class="line">启动Zerotier</span><br><span class="line">sudo systemctl start zerotier-one</span><br><span class="line">查看Zerotier状态</span><br><span class="line">sudo zerotier-cli status</span><br><span class="line">加入网络</span><br><span class="line">zerotier-cli join [网络ID]</span><br></pre></td></tr></table></figure>也可以使用frp或者nps来实现内网穿透达到对安卓的控制<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3></li><li><a href="https://www.appinn.com/ws-scrcpy">https://www.appinn.com/ws-scrcpy</a></li><li><a href="https://github.com/Genymobile/scrcpy">https://github.com/Genymobile/scrcpy</a><!--csdn-article-id:132594906--></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目地址： &lt;a href=&quot;https://github.com/NetrisTV/ws-scrcpy&quot;&gt;GitHub – NetrisTV/ws-scrcpy: Web client prototype for scrcpy.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;docke
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>开源免费远程控制软件RustDesk</title>
    <link href="https://cloudswave.github.io/2023/08/26/33/"/>
    <id>https://cloudswave.github.io/2023/08/26/33/</id>
    <published>2023-08-26T00:53:06.000Z</published>
    <updated>2023-08-26T00:55:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>简介：目前最友好的开源远程桌面软件，开箱即用，无需任何配置，全平台支持，完美替代 TeamViewer、ToDesk、AnyDesk等<br>开源地址：<a href="https://github.com/rustdesk">https://github.com/rustdesk</a><br>软件下载地址：<a href="https://github.com/rustdesk/rustdesk/releases">https://github.com/rustdesk/rustdesk/releases</a><br>网页端：<a href="http://45.76.181.120:8080/#/">http://45.76.181.120:8080/#/</a></p><!--csdn-article-id:132513491-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简介：目前最友好的开源远程桌面软件，开箱即用，无需任何配置，全平台支持，完美替代 TeamViewer、ToDesk、AnyDesk等&lt;br&gt;开源地址：&lt;a href=&quot;https://github.com/rustdesk&quot;&gt;https://github.com/rust
      
    
    </summary>
    
    
      <category term="软件推荐" scheme="https://cloudswave.github.io/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>alist编译记录</title>
    <link href="https://cloudswave.github.io/2023/02/17/29/"/>
    <id>https://cloudswave.github.io/2023/02/17/29/</id>
    <published>2023-02-17T03:46:51.000Z</published>
    <updated>2023-07-01T06:28:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="服务器环境"><a href="#服务器环境" class="headerlink" title="服务器环境"></a>服务器环境</h2><p>Linux version 3.10.0-327.el7.x86_64 (<a href="mailto:builder@kbuilder.dev.centos.org">builder@kbuilder.dev.centos.org</a>) (gcc version 4.8.3 20140911 (Red Hat 4.8.3-9) (GCC) ) #1 SMP Thu Nov 19 22:10:57 UTC 2015</p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install npm</span><br><span class="line">npm install -g npm@9.5.0</span><br><span class="line">npm install pnpm -g</span><br><span class="line">git clone --recursive https://github.com/alist-org/alist-web.git</span><br><span class="line">cd alist-web</span><br><span class="line">pnpm run build</span><br></pre></td></tr></table></figure><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">yum install screen</span><br><span class="line">screen -R alist # 开screen避免掉线编译中断</span><br><span class="line">rpm --import https://mirror.go-repo.io/centos/RPM-GPG-KEY-GO-REPO</span><br><span class="line">curl -s https://mirror.go-repo.io/centos/go-repo.repo | tee /etc/yum.repos.d/go-repo.repo</span><br><span class="line">yum install golang</span><br><span class="line">git clone https://github.com/alist-org/alist.git</span><br><span class="line">cd alist</span><br><span class="line">vi build-local.sh # 新建一个本地编译的脚本，复制以下内容</span><br><span class="line">------</span><br><span class="line">rm -rf ./public/dist/*</span><br><span class="line">cp -r ../alist-web/dist ./public/ # 注意前端代码路径</span><br><span class="line">appName=&quot;alist&quot;</span><br><span class="line">builtAt=&quot;$(date +&#x27;%F %T %z&#x27;)&quot;</span><br><span class="line">goVersion=$(go version | sed &#x27;s/go version //&#x27;)</span><br><span class="line">gitAuthor=$(git show -s --format=&#x27;format:%aN &lt;%ae&gt;&#x27; HEAD)</span><br><span class="line">gitCommit=$(git log --pretty=format:&quot;%h&quot; -1)</span><br><span class="line">version=$(git describe --long --tags --dirty --always)</span><br><span class="line">webVersion=$(wget -qO- -t1 -T2 &quot;https://api.github.com/repos/alist-org/alist-web/releases/latest&quot; | grep &quot;tag_name&quot; | head -n 1 | awk -F &quot;:&quot; &#x27;&#123;print $2&#125;&#x27; | sed &#x27;s/\&quot;//g;s/,//g;s/ //g&#x27;)</span><br><span class="line">ldflags=&quot;\</span><br><span class="line">-w -s \</span><br><span class="line">-X &#x27;github.com/alist-org/alist/v3/internal/conf.BuiltAt=$builtAt&#x27; \</span><br><span class="line">-X &#x27;github.com/alist-org/alist/v3/internal/conf.GoVersion=$goVersion&#x27; \</span><br><span class="line">-X &#x27;github.com/alist-org/alist/v3/internal/conf.GitAuthor=$gitAuthor&#x27; \</span><br><span class="line">-X &#x27;github.com/alist-org/alist/v3/internal/conf.GitCommit=$gitCommit&#x27; \</span><br><span class="line">-X &#x27;github.com/alist-org/alist/v3/internal/conf.Version=$version&#x27; \</span><br><span class="line">-X &#x27;github.com/alist-org/alist/v3/internal/conf.WebVersion=$webVersion&#x27; \</span><br><span class="line">&quot;</span><br><span class="line">go build -ldflags=&quot;$ldflags&quot; </span><br><span class="line">-----</span><br><span class="line"></span><br><span class="line">bash build-local.sh  # 编译</span><br><span class="line"></span><br><span class="line">./alist admin # 查看管理员信息</span><br><span class="line">./alist server # 启动服务</span><br><span class="line">vi ./data/config.json # 可修改端口</span><br></pre></td></tr></table></figure><h2 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">方案1：</span><br><span class="line"># crowdin 环境变量配置，先去crowdin官网注册获取api-token，创建一个project获取project id</span><br><span class="line"># https://crowdin.com/project/alist/zh-CN</span><br><span class="line">export CROWDIN_PROJECT_ID=***</span><br><span class="line">export CROWDIN_PERSONAL_TOKEN=***</span><br><span class="line">pnpm run i18n:release</span><br><span class="line"></span><br><span class="line">方案2：直接下载中文翻译文件</span><br><span class="line">[root@ecs-G3x6u alist]# wget https://crowdin.com/backend/download/project/alist/zh-CN.zip --no-check-certificate</span><br><span class="line">[root@ecs-G3x6u alist]# unzip zh-CN.zip </span><br><span class="line">Archive:  zh-CN.zip</span><br><span class="line">   creating: src/</span><br><span class="line">   creating: src/lang/</span><br><span class="line">   creating: src/lang/zh-CN/</span><br><span class="line">  inflating: src/lang/zh-CN/settings.json  </span><br><span class="line">  inflating: src/lang/zh-CN/metas.json  </span><br><span class="line">  inflating: src/lang/zh-CN/settings_other.json  </span><br><span class="line">  inflating: src/lang/zh-CN/manage.json  </span><br><span class="line">  inflating: src/lang/zh-CN/storages.json  </span><br><span class="line">  inflating: src/lang/zh-CN/login.json  </span><br><span class="line">  inflating: src/lang/zh-CN/drivers.json  </span><br><span class="line">  inflating: src/lang/zh-CN/global.json  </span><br><span class="line">  inflating: src/lang/zh-CN/users.json  </span><br><span class="line">  inflating: src/lang/zh-CN/home.json  </span><br><span class="line"> extracting: src/lang/zh-CN/index.json  </span><br><span class="line">  inflating: src/lang/zh-CN/tasks.json  </span><br><span class="line">  inflating: src/lang/zh-CN/br.json  </span><br><span class="line">  inflating: src/lang/zh-CN/indexes.json  </span><br><span class="line">[root@ecs-G3x6u alist]# ls</span><br><span class="line">alist  alist-web  src  zh-CN.zip</span><br><span class="line">[root@ecs-G3x6u alist]# cp -r ./src/lang/zh-CN ./alist-web/src/</span><br><span class="line">app/        components/ hooks/      index.d.ts  lang/       main.tsx    pages/      store/      types/      utils/      </span><br><span class="line">[root@ecs-G3x6u alist]# cp -r ./src/lang/zh-CN ./alist-web/src/lang/</span><br><span class="line">[root@ecs-G3x6u alist]# cd alist-web/</span><br><span class="line">[root@ecs-G3x6u alist-web]# node ./scripts/i18n.mjs</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://alist.nn.ci/zh/guide/install/source.html">https://alist.nn.ci/zh/guide/install/source.html</a></li><li><a href="https://blog.csdn.net/qq_25919879/article/details/128400309">https://blog.csdn.net/qq_25919879/article/details/128400309</a></li></ul><!--csdn-article-id:131495456-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;服务器环境&quot;&gt;&lt;a href=&quot;#服务器环境&quot; class=&quot;headerlink&quot; title=&quot;服务器环境&quot;&gt;&lt;/a&gt;服务器环境&lt;/h2&gt;&lt;p&gt;Linux version 3.10.0-327.el7.x86_64 (&lt;a href=&quot;mailto:build
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>amh面板部署typecho博客后显示404错误</title>
    <link href="https://cloudswave.github.io/2023/02/11/25/"/>
    <id>https://cloudswave.github.io/2023/02/11/25/</id>
    <published>2023-02-11T01:19:27.000Z</published>
    <updated>2023-02-11T01:20:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装typecho完成后访问后台和文章显示404<br>修改nginx配置：/home/wwwroot/lnmp01/vhost/typecho.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">location ~ .*\.php(\/.*)*$</span><br><span class="line">&#123;</span><br><span class="line">fastcgi_pass  unix:/tmp/php-cgi-lnmp01-typecho.sock;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>修改重写规则：/home/wwwroot/lnmp01/rewrite/amh.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (-f $request_filename/index.php)&#123;</span><br><span class="line">    rewrite (.*) $1/index.php;</span><br><span class="line">&#125;</span><br><span class="line">if (!-f $request_filename)&#123;</span><br><span class="line">    rewrite (.*) /index.php;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">killall nginx</span><br><span class="line">/usr/local/nginx-generic-1.20/sbin/nginx</span><br></pre></td></tr></table></figure><!--csdn-article-id:128986002-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装typecho完成后访问后台和文章显示404&lt;br&gt;修改nginx配置：/home/wwwroot/lnmp01/vhost/typecho.conf&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Termux通过Ubuntu安装AMH面板</title>
    <link href="https://cloudswave.github.io/2023/01/24/21/"/>
    <id>https://cloudswave.github.io/2023/01/24/21/</id>
    <published>2023-01-24T19:47:50.000Z</published>
    <updated>2023-01-24T19:59:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>注意先使用：uname -m查看确保手机是aarch64位架构</strong></p><h1 id="Termux下Atilo安装ubuntu"><a href="#Termux下Atilo安装ubuntu" class="headerlink" title="Termux下Atilo安装ubuntu"></a>Termux下Atilo安装ubuntu</h1><p>参考：<a href="https://www.jianshu.com/p/a9b30ea2ae66">https://www.jianshu.com/p/a9b30ea2ae66</a></p><h1 id="快速安装amh面板"><a href="#快速安装amh面板" class="headerlink" title="快速安装amh面板"></a>快速安装amh面板</h1><p>参考：<a href="http://amh.sh/install.htm">http://amh.sh/install.htm</a><br>ubuntu下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CV=[CN] DV=N &amp;&amp; wget http://dl.amh.sh/amh.sh &amp;&amp; bash amh.sh</span><br></pre></td></tr></table></figure><p>安装成功后系统会提示面板访问地址与AMH、MySQL默认账号密码。<br>常用配置目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/amh-7.0/etc/</span><br><span class="line">/usr/local/amh-7.0/vhost/</span><br><span class="line">/home/wwwroot/lnmp01/vhost/</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">启动Nginx: amh nginx start</span><br><span class="line">停止Nginx: amh nginx stop</span><br><span class="line">重载Nginx: amh nginx reload</span><br><span class="line">重启Nginx: amh nginx restart</span><br><span class="line">启动MySQL: amh mysql start</span><br><span class="line">停止MySQL: amh mysql stop</span><br><span class="line">重载MySQL: amh mysql reload</span><br><span class="line">重启MySQL: amh mysql restart</span><br><span class="line">强制重载MySQL: amh mysql force-reload</span><br><span class="line">启动PHP: amh php start [主标识域名]</span><br><span class="line">停止PHP: amh php stop [主标识域名]</span><br><span class="line">强行停止PHP: amh php force-quit [主标识域名]</span><br><span class="line">重启PHP: amh php restart [主标识域名]</span><br><span class="line">重载PHP: amh php reload [主标识域名]</span><br></pre></td></tr></table></figure><h1 id="错误处理记录"><a href="#错误处理记录" class="headerlink" title="错误处理记录"></a>错误处理记录</h1><ul><li>面板8888端口无法访问主页，amh nginx restart 看报错信息，发现ssl证书无法加载，80端口无法使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx: [emerg] cannot load certificate &quot;/usr/local/amh-7.0/etc/ssl/amh.crt&quot;: BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen(&#x27;/usr/local/amh-7.0/etc/ssl/amh.crt&#x27;,&#x27;r&#x27;) error:2006D080:BIO routines:BIO_new_file:no such file)</span><br><span class="line"></span><br><span class="line">nginx: [emerg] bind() to 0.0.0.0:80 failed (13: Permission denied)</span><br></pre></td></tr></table></figure></li></ul><ol><li>修改/usr/local/amh-7.0/vhost/amh-nginx.conf移除9999端口服务器配置部分</li><li>修改/home/wwwroot/lnmp01/vhost/0.0.0.0.conf，将80端口改成1024以上比如1025<!--csdn-article-id:128760107--></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;注意先使用：uname -m查看确保手机是aarch64位架构&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;Termux下Atilo安装ubuntu&quot;&gt;&lt;a href=&quot;#Termux下Atilo安装ubuntu&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Termux通过ubuntu安装宝塔面板</title>
    <link href="https://cloudswave.github.io/2023/01/23/20/"/>
    <id>https://cloudswave.github.io/2023/01/23/20/</id>
    <published>2023-01-23T11:31:56.000Z</published>
    <updated>2023-05-27T17:22:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Termux下Atilo安装ubuntu"><a href="#Termux下Atilo安装ubuntu" class="headerlink" title="Termux下Atilo安装ubuntu"></a>Termux下Atilo安装ubuntu</h1><p>ubuntu或者debian支持64或者32位架构cpu<br>参考：<a href="https://www.jianshu.com/p/a9b30ea2ae66">https://www.jianshu.com/p/a9b30ea2ae66</a></p><h1 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h1><p>uname -m查看cpu架构，aarch64代表64位<br>参考：<a href="https://gitee.com/pdusb/pdusb-fast-btpanel">https://gitee.com/pdusb/pdusb-fast-btpanel</a><br>64位ubuntu下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/pdusb/pdusb-fast-btpanel.git</span><br><span class="line">cd pdusb-fast-btpanel</span><br><span class="line">./pdbolt-inst-bt-acel.sh</span><br><span class="line">bash /tmp/btp/pdbolt-bt-install/install.sh</span><br><span class="line"></span><br><span class="line">/etc/init.d/bt restart</span><br><span class="line"># 进入宝塔工具面板，可查看修改端口和密码</span><br><span class="line">bt</span><br></pre></td></tr></table></figure><p>32位ubuntu或者debian只能安装5.9版面板, python2.7：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-setuptools</span><br><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p>参考<a href="https://www.234du.com/1194.html">宝塔(BT-Panel) Linux 面板 5.9 开心版教程</a><br><a href="https://blog.csdn.net/lovelinchuangfeng/article/details/123843230">玩客云安装宝塔面板5.9</a></p><h1 id="错误处理记录"><a href="#错误处理记录" class="headerlink" title="错误处理记录"></a>错误处理记录</h1><ul><li><p>ERROR: cannot verify download.bt.cn’s certificate, issued by ‘CN=sslTrus (RSA) OV CA,O=sslTrus,C=CN’: Unable to locally verify the issuer’s authority. To connect to download.bt.cn insecurely, use `–no-check-certificate’ ERROR: Download python env fielded.<br>关闭证书验证：echo “check_certificate = off” &gt;&gt; ~/.wgetrc</p></li><li><p>报错chmod: cannot access ‘/tmp/btp/pyenv/bin/python3.7’: Operation not permitted…</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">root@localhost:~/pdusb-fast-btpanel# chmod 777 /tmp/btp/pyenv/bin/ -R</span><br><span class="line">chmod: cannot access &#x27;/tmp/btp/pyenv/bin/python3.7&#x27;: Operation not permitted</span><br><span class="line">chmod: cannot access &#x27;/tmp/btp/pyenv/bin/.l2s.python3.70001&#x27;: Operation not permitted</span><br><span class="line">chmod: cannot access &#x27;/tmp/btp/pyenv/bin/python3.7m&#x27;: Operation not permitted</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>解压pyenv-ubuntu2004-3.7.8-aarch64.tar.xz出错导致，重新解压后替换出错文件</p></li><li><p>宝塔启动失败</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/www/server/panel/BT-Panel&quot;, line 27, in &lt;module&gt;</span><br><span class="line">    from BTPanel import app,sys,public</span><br><span class="line">  File &quot;/www/server/panel/BTPanel/__init__.py&quot;, line 11, in &lt;module&gt;</span><br><span class="line">    import json</span><br><span class="line">ModuleNotFoundError: No module named &#x27;json&#x27;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>权限修复：chmod 777 -R /www</p></li><li><p>ubuntu bash报错：groups: cannot find name for group ID ***</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">groups: cannot find name for group ID 1015</span><br><span class="line">groups: cannot find name for group ID 1028</span><br><span class="line">groups: cannot find name for group ID 3003</span><br><span class="line">groups: cannot find name for group ID 9997</span><br><span class="line">groups: cannot find name for group ID 50062</span><br></pre></td></tr></table></figure><p>termux在安装ubuntu运行的时候出现了goups: cannot find name for group ID，由于termux安装ubuntu后没有给原本Android的系统用户组赋予名称导致, 解决办法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;1015:x:1015:</span><br><span class="line">1028:x:1028:</span><br><span class="line">3003:x:3003:</span><br><span class="line">50062:x:50062:</span><br><span class="line">9997:x:9997:&quot; &gt;&gt;/etc/group</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/babytiger/article/details/112121506">参考</a></p></li><li><p>宝塔安装报错：ImportError: No module named setuptools<br>阅读install.sh脚本，把已经执行过的命令注释，排查哪行命令报错，执行的时候发现宝塔需要使用python2.7的pip，而apt命令安装的pip会安装到python3里了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py </span><br><span class="line">python2 get-pip.py</span><br><span class="line">然后将pip命令链接到bin目录下</span><br></pre></td></tr></table></figure></li><li><p>启动宝塔成功，但是无法显示登录页，显示500错误<br>查看宝塔的/etc/init.d/bt 脚本，尝试找到错误日志保存路径如下，cat /tmp/panelBoot.pl ，发现cp: cannot create regular file ‘/dev/shm/session.db’，修改/www/server/panel/main.py, 把/dev/shm/session.db路径修改成/tmp/session.db</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup python main.pyc `cat data/port.pl` &gt; /tmp/panelBoot.pl 2&gt;&amp;1 &amp; </span><br></pre></td></tr></table></figure><img width="329" alt="image" src="https://user-images.githubusercontent.com/5915548/215061606-14bf121c-db32-4397-8084-ffebc7fd2965.png"><img width="395" alt="image" src="https://user-images.githubusercontent.com/5915548/215062467-bd13cfeb-a6a7-42aa-af81-d4bab63b8af2.png"></li></ul><!--csdn-article-id:128755099-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Termux下Atilo安装ubuntu&quot;&gt;&lt;a href=&quot;#Termux下Atilo安装ubuntu&quot; class=&quot;headerlink&quot; title=&quot;Termux下Atilo安装ubuntu&quot;&gt;&lt;/a&gt;Termux下Atilo安装ubuntu&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>安卓5下Termux通过ubuntu安装alist</title>
    <link href="https://cloudswave.github.io/2023/01/23/19/"/>
    <id>https://cloudswave.github.io/2023/01/23/19/</id>
    <published>2023-01-23T01:43:42.000Z</published>
    <updated>2023-01-23T07:13:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>安卓7以上可以直接通过pkg install alist来安装alist，安卓5安装ubuntu需要64位termux，通过Atilo套娃其他linux来安装alist</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>termux下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt install tmux</span><br><span class="line">echo &quot;deb [trusted=yes arch=all] https://yadominjinta.github.io/files/ termux extras&quot; &gt;&gt; $PREFIX/etc/apt/sources.list.d/atilo.list</span><br><span class="line">apt update &amp;&amp; apt install atilo-cn</span><br><span class="line">atilo images #可以安装的镜像列表</span><br><span class="line">atilo pull ubuntu</span><br><span class="line">ls ~/.atilo #可以备份该路径以便日后有问题恢复系统</span><br><span class="line">atilo run ubuntu #启动进入ubuntu</span><br></pre></td></tr></table></figure><p>ubuntu下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt install curl</span><br><span class="line">apt install tmux</span><br><span class="line">curl -fsSL &quot;https://alist.nn.ci/v3.sh&quot; | bash -s install</span><br><span class="line">/opt/alist/alist admin #查看密码</span><br><span class="line">/opt/alist/alist server</span><br></pre></td></tr></table></figure><p>Atilo介绍：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Atilo 是一个用来帮助你在termux上安装不同的GNU/Linux发行版的程序</span><br><span class="line">命令:</span><br><span class="line">images 列出可用镜像</span><br><span class="line">remove 移除本地的镜像</span><br><span class="line">pull 拉取远程的镜像</span><br><span class="line">run 运行镜像</span><br><span class="line">clean 清除缓存</span><br><span class="line">help 帮助</span><br><span class="line"></span><br><span class="line">$ atilo images</span><br><span class="line">+----------+------------+--------+--------+</span><br><span class="line">| 名称 | 版本 | 已安装 | 可安装 |</span><br><span class="line">+----------+------------+--------+--------+</span><br><span class="line">| alpine | 3.12 | False | True |</span><br><span class="line">| centos | 8 | False | True |</span><br><span class="line">| debian | buster | False | True |</span><br><span class="line">| fedora | 33 | False | True |</span><br><span class="line">| kali | latest | False | True |</span><br><span class="line">| opensuse | Tumbleweed | False | True |</span><br><span class="line">| ubuntu | focal | False | True |</span><br><span class="line">+----------+------------+--------+--------+</span><br></pre></td></tr></table></figure><h2 id="自启配置"><a href="#自启配置" class="headerlink" title="自启配置"></a>自启配置</h2><p>termux下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;~/startup.sh&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &quot;~/startup.sh&quot; &gt;&gt; ~/.atilo/ubuntu/root/.bashrc</span><br></pre></td></tr></table></figure><p>vi ~/startup.sh增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if pgrep -f &quot;ubuntu&quot; &gt;/dev/null</span><br><span class="line">  then</span><br><span class="line">    echo &quot;ubuntu运行中...&quot;</span><br><span class="line">  else</span><br><span class="line">  tmux new -d -s ubuntu &#x27;atilo run ubuntu&#x27;</span><br><span class="line">  echo &quot;ubuntu已开启...&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>vi ~/.atilo/ubuntu/root/startup.sh：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if pgrep -x &quot;alist&quot; &gt;/dev/null</span><br><span class="line">  then</span><br><span class="line">    echo &quot;alist运行中...&quot;</span><br><span class="line">  else</span><br><span class="line">  tmux new -d -s alist &#x27;/opt/alist/alist server&#x27;</span><br><span class="line">  echo &quot;alist已开启...&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><!--csdn-article-id:128754459-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安卓7以上可以直接通过pkg install alist来安装alist，安卓5安装ubuntu需要64位termux，通过Atilo套娃其他linux来安装alist&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>联想乐檬k3刷安卓5.1教程</title>
    <link href="https://cloudswave.github.io/2023/01/22/18/"/>
    <id>https://cloudswave.github.io/2023/01/22/18/</id>
    <published>2023-01-22T09:58:10.000Z</published>
    <updated>2023-01-23T06:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作快捷键"><a href="#操作快捷键" class="headerlink" title="操作快捷键"></a>操作快捷键</h2><ul><li>三键进recovery: 电源键+音量加+音量减</li><li>进入fastboot: 电源键+音量减</li><li>官方更多选择菜单：电源键+音量减</li><li>高通刷机：按住音量加+音量减然后插电脑usb，设备管理器会显示高通端口</li></ul><p>刷机包下载: <a href="https://pan.baidu.com/s/1tnf2xMoqtcL6p50ZiRYICw">https://pan.baidu.com/s/1tnf2xMoqtcL6p50ZiRYICw</a> 提取码:agjm<br>提示： 如果插电脑usb后供电不足反复重启，则电池触点正负极接线后使用充电宝供电</p><h2 id="线刷5-1底包"><a href="#线刷5-1底包" class="headerlink" title="线刷5.1底包"></a>线刷5.1底包</h2><p><code>联想乐檬K3安卓5.0以上底层线刷包.rar</code>中有线刷文件，驱动和工具<br>线刷工具使用参考：<a href="http://m.rom.7to.cn/jiaochengdetail/4292">http://m.rom.7to.cn/jiaochengdetail/4292</a></p><ol><li><p>先将官方刷机包解压到电脑上，然后再将刷机工具也解压，然后进入工具目录，找到并双击运行升级工具“QcomDLoader.exe”,</p></li><li><p>点击工具左侧的第一个按钮，也就是port上面那个齿轮按钮，点击后如下所示找到解压好的固件文件夹。<br><img src="https://user-images.githubusercontent.com/5915548/213976396-073045d4-2282-419a-8ad7-b72475747578.png" alt="image"></p></li><li><p>再点击工具左侧第二个按钮，也就是两个齿轮的按钮，弹出配置框，会看到框里有三个文件都在我们刚刚加载好的文件包中，这里默认不需要修改。所以点击OK即可：<br><img src="https://user-images.githubusercontent.com/5915548/213976398-ace4bc2a-c929-4676-b433-2d1d1ea9f49e.png" alt="image"><br><img src="https://user-images.githubusercontent.com/5915548/213976397-6ed86dbb-3870-4bfd-8a12-b711bc9ee17d.png" alt="image"></p></li><li><p>点击左边第三个按钮，也就是一个箭头的按钮，点击之后，将手机关机，同时按住音量上键和下键不放，连接上电脑。走动进度条后松开两键，如下图<br><img src="https://user-images.githubusercontent.com/5915548/213976409-231b3823-23f6-4636-90d3-d7f002f2aa1f.png" alt="image"></p></li><li><p>线刷升级过程中请不要触碰手机和数据线，升级时间一般为5分钟左右，请根据实际情况而定，线刷成功后如下图所示：再拔掉数据线，重装电池开机即可!<br><img src="https://user-images.githubusercontent.com/5915548/213976439-1e958b44-1676-471b-b660-a00f8246a871.png" alt="image"></p></li></ol><h2 id="卡刷魔趣5-1-64位系统"><a href="#卡刷魔趣5-1-64位系统" class="headerlink" title="卡刷魔趣5.1-64位系统"></a>卡刷魔趣5.1-64位系统</h2><ol><li>线刷后，三键会进入到自带的奇兔recovery，双清格式化data分区</li><li>连接电脑后可以看到k30设备，将卡刷包<code>乐檬k3-卡刷魔趣android-5.1刷机包.zip</code>复制到设备中</li><li>recovery点击安装刚复制的卡刷包</li><li>显示完毕后重启手机</li></ol><h2 id="scrcpy远程控制手机"><a href="#scrcpy远程控制手机" class="headerlink" title="scrcpy远程控制手机"></a>scrcpy远程控制手机</h2><p>参考：<a href="https://blog.csdn.net/liuqinhou/article/details/127460195">https://blog.csdn.net/liuqinhou/article/details/127460195</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb connect 192.168.153.243 # 手机ip</span><br><span class="line">scrcpy -b5M -m720 -Sw</span><br></pre></td></tr></table></figure><table><thead><tr><th>Action</th><th>快捷键</th><th>快捷键 (macOS)</th></tr></thead><tbody><tr><td>切换全屏模式</td><td>Ctrl+f</td><td>Cmd+f</td></tr><tr><td>向左旋转屏幕</td><td>Ctrl+← (left)</td><td>Cmd+← (left)</td></tr><tr><td>向右旋转屏幕</td><td>Ctrl+→ (right)</td><td>Cmd+→ (right)</td></tr><tr><td>将窗口大小调整为1:1</td><td>Ctrl+g</td><td>Cmd+g</td></tr><tr><td>调整窗口大小以移除黑色边框</td><td>Ctrl+x | Double-click¹</td><td>Cmd+x | Double-click¹</td></tr><tr><td>点击 HOME</td><td>Ctrl+h | Middle-click</td><td>Ctrl+h | Middle-click</td></tr><tr><td>点击 BACK</td><td>Ctrl+b | Right-click²</td><td>Cmd+b | Right-click²</td></tr><tr><td>点击 APP_SWITCH</td><td>Ctrl+s</td><td>Cmd+s</td></tr><tr><td>点击 MENU</td><td>Ctrl+m</td><td>Ctrl+m</td></tr><tr><td>点击 VOLUME_UP</td><td>Ctrl+↑ (up)</td><td>Cmd+↑ (up)</td></tr><tr><td>点击 VOLUME_DOWN</td><td>Ctrl+↓ (down)</td><td>Cmd+↓ (down)</td></tr><tr><td>点击 POWER</td><td>Ctrl+p</td><td>Cmd+p</td></tr><tr><td>开机</td><td>Right-click²</td><td>Right-click²</td></tr><tr><td>关闭设备屏幕</td><td>Ctrl+o</td><td>Cmd+o</td></tr><tr><td>点亮设备屏幕</td><td>Ctrl+Shift+o</td><td>Cmd+Shift+o</td></tr><tr><td>旋转设备屏幕</td><td>Ctrl+r</td><td>Cmd+r</td></tr><tr><td>展开通知面板</td><td>Ctrl+n</td><td>Cmd+n</td></tr><tr><td>折叠通知面板</td><td>Ctrl+Shift+n</td><td>Cmd+Shift+n</td></tr><tr><td>将设备剪贴板复制到计算机</td><td>Ctrl+c</td><td>Cmd+c</td></tr><tr><td>将电脑剪贴板粘贴到设备上</td><td>Ctrl+v</td><td>Cmd+v</td></tr><tr><td>将计算机剪贴板复制到设备并粘贴</td><td>Ctrl+Shift+v</td><td>Cmd+Shift+v</td></tr><tr><td>启用/禁用帧率显示</td><td>Ctrl+i</td><td>Cmd+i</td></tr></tbody></table><h2 id="安卓5安装termux"><a href="#安卓5安装termux" class="headerlink" title="安卓5安装termux"></a>安卓5安装termux</h2><ul><li>参考<a href="https://github.com/termux/termux-app/wiki/Termux-on-android-5-or-6">Termux-on-android-5-or-6</a></li><li>最新版本<a href="https://github.com/termux/termux-app/actions/workflows/debug_build.yml?query=branch%3Amaster+">下载地址</a></li><li><a href="https://wwuy.lanzoub.com/imQ8T0i4bd7e">64位termux-app_v0.118.0+be66cff-apt-android-5-github-debug_arm64-v8a.zip - 蓝奏云</a></li><li><a href="https://wwuy.lanzoub.com/iq8cr0i4bdjg">32位termux-app_v0.118.0+be66cff-apt-android-5-github-debug_armeabi-v7a.zip - 蓝奏云</a></li></ul><h2 id="利用Atilo安装ubuntu或debian和alist"><a href="#利用Atilo安装ubuntu或debian和alist" class="headerlink" title="利用Atilo安装ubuntu或debian和alist"></a>利用Atilo安装ubuntu或debian和alist</h2><p>提示：安装ubuntu需要64位termux，安卓5的termux无法直接通过pkg install alist来安装alist，故需要通过其他linux安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb [trusted=yes arch=all] https://yadominjinta.github.io/files/ termux extras&quot; &gt;&gt; $PREFIX/etc/apt/sources.list.d/atilo.list</span><br><span class="line">apt update &amp;&amp; apt install atilo-cn</span><br><span class="line">atilo images #可以安装的镜像列表</span><br><span class="line">atilo pull ubuntu</span><br><span class="line">ls ~/.atilo #可以备份该路径以便日后有问题恢复系统</span><br><span class="line">atilo run ubuntu</span><br><span class="line"># 以下为ubuntu下命令</span><br><span class="line">apt install curl</span><br><span class="line">curl -fsSL &quot;https://alist.nn.ci/v3.sh&quot; | bash -s install</span><br><span class="line">/opt/alist/alist admin</span><br><span class="line">/opt/alist/alist server</span><br></pre></td></tr></table></figure><p>Atilo 是一个用来帮助你在termux上安装不同的GNU/Linux发行版的程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">命令:</span><br><span class="line">images           列出可用镜像</span><br><span class="line">remove           移除本地的镜像</span><br><span class="line">pull             拉取远程的镜像</span><br><span class="line">run              运行镜像</span><br><span class="line">clean            清除缓存</span><br><span class="line">help             帮助</span><br><span class="line">$ atilo images</span><br><span class="line">+----------+------------+--------+--------+</span><br><span class="line">|   名称   |    版本    | 已安装 | 可安装 |</span><br><span class="line">+----------+------------+--------+--------+</span><br><span class="line">|  alpine  |    3.12    | False  |  True  |</span><br><span class="line">|  centos  |     8      | False  |  True  |</span><br><span class="line">|  debian  |   buster   | False  |  True  |</span><br><span class="line">|  fedora  |     33     | False  |  True  |</span><br><span class="line">|   kali   |   latest   | False  |  True  |</span><br><span class="line">| opensuse | Tumbleweed | False  |  True  |</span><br><span class="line">|  ubuntu  |   focal    | False  |  True  |</span><br><span class="line">+----------+------------+--------+--------+</span><br></pre></td></tr></table></figure><!--csdn-article-id:128753414-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作快捷键&quot;&gt;&lt;a href=&quot;#操作快捷键&quot; class=&quot;headerlink&quot; title=&quot;操作快捷键&quot;&gt;&lt;/a&gt;操作快捷键&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;三键进recovery: 电源键+音量加+音量减&lt;/li&gt;
&lt;li&gt;进入fastboot: 电源键+音量
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>nginx和php-fpm以root用户运行</title>
    <link href="https://cloudswave.github.io/2022/12/11/15/"/>
    <id>https://cloudswave.github.io/2022/12/11/15/</id>
    <published>2022-12-11T00:53:54.000Z</published>
    <updated>2022-12-11T04:54:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>开启root权限，请谨慎使用！！！</strong><br>为了使KodExplorer能读写root用户数据需要修改nginx，php-fpm运行用户为root，下面为修改笔记</p><ul><li>nginx version: nginx/1.18.0 (Ubuntu)</li><li>PHP 8.1</li></ul><p>sudo vi /etc/nginx/nginx.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user root; #第一行</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>sudo vi /etc/php/8.1/fpm/pool.d/<a href="http://www.conf">www.conf</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"># 修改两处</span><br><span class="line">listen.owner = root</span><br><span class="line">listen.group = root</span><br><span class="line">...</span><br><span class="line">user = root</span><br><span class="line">group = root</span><br></pre></td></tr></table></figure><p>sudo vi /lib/systemd/system/php8.1-fpm.service</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 加上-R允许root执行</span><br><span class="line">...</span><br><span class="line">ExecStart=/usr/sbin/php-fpm8.1 -R --nodaemonize --fpm-config /etc/php/8.1/fpm/php-fpm.conf</span><br><span class="line">...</span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">防火墙问题可能导致80端口无法访问</span><br></pre></td></tr></table></figure><h1 id="如果外网无法访问请关闭防火墙或者添加规则"><a href="#如果外网无法访问请关闭防火墙或者添加规则" class="headerlink" title="如果外网无法访问请关闭防火墙或者添加规则"></a>如果外网无法访问请关闭防火墙或者添加规则</h1><p>service iptables stop<br>iptables -I INPUT -p tcp –dport 80 -j ACCEPT</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">重启服务</span><br></pre></td></tr></table></figure><p>systemctl daemon-reload # php8.1-fpm.service修改刷新<br>/etc/init.d/php8.1-fpm restart<br>/etc/init.d/nginx restart</p><h1 id="check-php8-1-fpm-sock是否生成"><a href="#check-php8-1-fpm-sock是否生成" class="headerlink" title="check php8.1-fpm.sock是否生成"></a>check php8.1-fpm.sock是否生成</h1><p>ls /run/php/<br>```</p><!--csdn-article-id:128278703-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;开启root权限，请谨慎使用！！！&lt;/strong&gt;&lt;br&gt;为了使KodExplorer能读写root用户数据需要修改nginx，php-fpm运行用户为root，下面为修改笔记&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx version: nginx/1.18.
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>给rm增加回收站，安全的使用rm命令</title>
    <link href="https://cloudswave.github.io/2022/12/10/13/"/>
    <id>https://cloudswave.github.io/2022/12/10/13/</id>
    <published>2022-12-10T06:28:45.000Z</published>
    <updated>2022-12-10T06:50:48.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env bash</span><br><span class="line">#</span><br><span class="line"># Description: 给rm命令增加回收站</span><br><span class="line"># System Required: CentOS/Debian/Ubuntu</span><br><span class="line"># Version: 1.0.0</span><br><span class="line"></span><br><span class="line">cat &gt; /usr/local/bin/rm.sh &lt;&lt; &#x27;EOF&#x27;</span><br><span class="line">#!/bin/bash </span><br><span class="line"></span><br><span class="line">RECYCLE=~/.local/share/Trash/files</span><br><span class="line">test ! -d $&#123;RECYCLE&#125; &amp;&amp; mkdir -p $&#123;RECYCLE&#125; #if not trash folder,create one  </span><br><span class="line">_datedir=`date +&quot;%Y%m%d&quot;`  </span><br><span class="line">_dstdir=$&#123;RECYCLE&#125;/$&#123;_datedir&#125;  </span><br><span class="line">test ! -d $&#123;_dstdir&#125; &amp;&amp; mkdir -p $&#123;_dstdir&#125; #if not trash folder,create one  </span><br><span class="line"></span><br><span class="line">for _parms in $*  </span><br><span class="line">do  </span><br><span class="line">if [ -d $&#123;_parms&#125; ] || [ -f $&#123;_parms&#125; ];then  </span><br><span class="line">  test -d $&#123;_parms&#125; &amp;&amp; echo &quot;$&#123;_parms&#125; is directory&quot; &amp;&amp; mv $&#123;_parms&#125; $&#123;_dstdir&#125;/  </span><br><span class="line">  test -f $&#123;_parms&#125; &amp;&amp; echo &quot;$&#123;_parms&#125; is file&quot; &amp;&amp; mv $&#123;_parms&#125; $&#123;_dstdir&#125;/  </span><br><span class="line">  else   echo &quot;$&#123;_parms&#125; is not directory or file&quot;  </span><br><span class="line">fi  </span><br><span class="line">done</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chmod +x /usr/local/bin/rm.sh</span><br><span class="line">echo &quot;alias rm=&#x27;/usr/local/bin/rm.sh&#x27;&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &quot;alias surm=&#x27;/bin/rm -i&#x27;&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &quot;alias rmt=&#x27;/bin/rm -i -r ~/.local/share/Trash/files/*&#x27;&quot; &gt;&gt; ~/.bashrc # 一键清理回收站命令: rmt -f</span><br><span class="line"></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><!--csdn-article-id:128270345-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>docker版alist和aria2配合使用</title>
    <link href="https://cloudswave.github.io/2022/12/08/12/"/>
    <id>https://cloudswave.github.io/2022/12/08/12/</id>
    <published>2022-12-08T23:51:55.000Z</published>
    <updated>2023-03-15T10:28:57.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 --name=&quot;alist&quot; xhofe/alist:latest</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">--name aria2 \</span><br><span class="line">--restart unless-stopped \</span><br><span class="line">--log-opt max-size=1m \</span><br><span class="line">-e PUID=$UID \</span><br><span class="line">-e PGID=$GID \</span><br><span class="line">-e UMASK_SET=022 \</span><br><span class="line">-e RPC_SECRET=pac_password \</span><br><span class="line">-e RPC_PORT=6800 \</span><br><span class="line">-e LISTEN_PORT=6888 \</span><br><span class="line">-p 16800:6800 \</span><br><span class="line">-p 16888:6888 \</span><br><span class="line">-p 16888:6888/udp \</span><br><span class="line">-v /root/aria2/config:/config \</span><br><span class="line">-v /etc/alist/temp/downloads:/downloads \</span><br><span class="line">-v /etc/alist/temp/aria2:/opt/alist/data/temp/aria2 \</span><br><span class="line">p3terx/aria2-pro</span><br></pre></td></tr></table></figure><p>-v /etc/alist/temp/aria2:/opt/alist/data/temp/aria2 注意这个地方是为了让离线下载路径可以共享，并且只能在同一台服务器上否则离线下载后复制到某个存储下面时会报transfer失败<br>参考：<a href="https://alist.nn.ci/zh/guide/install/docker.html">https://alist.nn.ci/zh/guide/install/docker.html</a></p><!--csdn-article-id:128254475-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>finalshell配置备份同步</title>
    <link href="https://cloudswave.github.io/2022/12/04/11/"/>
    <id>https://cloudswave.github.io/2022/12/04/11/</id>
    <published>2022-12-04T05:56:38.000Z</published>
    <updated>2022-12-05T21:00:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>备份同步以下文件：<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/Users/$USER/Library/FinalShell/conn/</span><br><span class="line">/Users/$USER/Library/FinalShell/config.json</span><br><span class="line">/Users/$USER/Library/FinalShell/knownhosts.json</span><br><span class="line">/Users/$USER/Library/FinalShell/config.json</span><br></pre></td></tr></table></figure><br>/conn #服务器连接信息配置文件夹<br>config.json #基本配置文件<br>knownhosts.json #服务器密钥<br>tconfig.json #一些缓存</p><!--csdn-article-id:128178253-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;备份同步以下文件：&lt;br&gt; &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>禁用win10自动更新</title>
    <link href="https://cloudswave.github.io/2022/11/12/9/"/>
    <id>https://cloudswave.github.io/2022/11/12/9/</id>
    <published>2022-11-12T01:06:30.000Z</published>
    <updated>2022-11-12T01:08:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>管理员运行cmd：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">takeown /F C:\Windows\SoftwareDistribution /A /R</span><br><span class="line">Icacls C:\Windows\SoftwareDistribution /deny system:(OI)(CI)(W)</span><br><span class="line">Icacls C:\Windows\SoftwareDistribution /deny &quot;ALL APPLICATION PACKAGES:(OI)(CI)(W)&quot;</span><br></pre></td></tr></table></figure><!--csdn-article-id:127822653-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;管理员运行cmd：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
    
      <category term="搞机" scheme="https://cloudswave.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Github issue update Api</title>
    <link href="https://cloudswave.github.io/2022/10/30/8/"/>
    <id>https://cloudswave.github.io/2022/10/30/8/</id>
    <published>2022-10-30T00:58:00.000Z</published>
    <updated>2022-10-30T01:17:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Github issue update js api:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// Octokit.js</span><br><span class="line">// https://github.com/octokit/core.js#readme</span><br><span class="line">const octokit = new Octokit(&#123;</span><br><span class="line">  auth: &#x27;YOUR-TOKEN&#x27;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">await octokit.request(&#x27;PATCH /repos/&#123;owner&#125;/&#123;repo&#125;/issues/&#123;issue_number&#125;&#x27;, &#123;</span><br><span class="line">  owner: &#x27;OWNER&#x27;,</span><br><span class="line">  repo: &#x27;REPO&#x27;,</span><br><span class="line">  issue_number: &#x27;ISSUE_NUMBER&#x27;,</span><br><span class="line">  title: &#x27;Found a bug&#x27;,</span><br><span class="line">  body: &#x27;I\&#x27;m having a problem with this.&#x27;,</span><br><span class="line">  assignees: [</span><br><span class="line">    &#x27;octocat&#x27;</span><br><span class="line">  ],</span><br><span class="line">  milestone: 1,</span><br><span class="line">  state: &#x27;open&#x27;,</span><br><span class="line">  labels: [</span><br><span class="line">    &#x27;bug&#x27;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://docs.github.com/cn/rest/issues/issues#update-an-issue">https://docs.github.com/cn/rest/issues/issues#update-an-issue</a></p><!--csdn-article-id:127601871-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Github issue update js api:&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to get and save the CSDN cookie as the secret</title>
    <link href="https://cloudswave.github.io/2022/10/29/6/"/>
    <id>https://cloudswave.github.io/2022/10/29/6/</id>
    <published>2022-10-29T08:52:48.000Z</published>
    <updated>2022-10-29T10:30:22.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Press FN + F12 to the Dev Tools and select the network</li><li>Login the <a href="https://mp.csdn.net/">CSDN Blog</a></li><li>Find the Cookie</li><li>Copy the Cookie and save to the Repo Secrets Setting page<img width="959" alt="get-the-csdn-cookie" src="https://user-images.githubusercontent.com/5915548/198843510-5b7c7c37-e3c2-4d1b-9cac-c7bff5fd5961.png"><img width="1094" alt="save-the-cookie" src="https://user-images.githubusercontent.com/5915548/198843517-e563b5ef-3f42-423f-b9c5-1bcc793ffa4e.png"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Press FN + F12 to the Dev Tools and select the network&lt;/li&gt;
&lt;li&gt;Login the &lt;a href=&quot;https://mp.csdn.net/&quot;&gt;CSDN Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fin
      
    
    </summary>
    
    
      <category term="Guide" scheme="https://cloudswave.github.io/tags/Guide/"/>
    
  </entry>
  
  <entry>
    <title>CSDN博客接口分析</title>
    <link href="https://cloudswave.github.io/2022/10/29/5/"/>
    <id>https://cloudswave.github.io/2022/10/29/5/</id>
    <published>2022-10-29T05:39:06.000Z</published>
    <updated>2022-10-29T22:44:45.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">&quot;./mcConfig&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createPost</span>(<span class="params">oPost</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">&quot;https://mp.csdn.net/mdeditor/saveArticle&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> oBody = &#123;</span><br><span class="line">          <span class="attr">title</span>: oPost.<span class="property">title</span>,</span><br><span class="line">          <span class="attr">markdowncontent</span>: oPost.<span class="property">body</span>,</span><br><span class="line">          <span class="attr">tags</span>:<span class="string">&quot;Fiori&quot;</span>,</span><br><span class="line">          <span class="attr">categories</span>:<span class="string">&quot;Fiori&quot;</span>,</span><br><span class="line">          <span class="attr">channel</span>:<span class="string">&quot;14&quot;</span>,</span><br><span class="line">          <span class="attr">type</span>:<span class="string">&quot;original&quot;</span>,</span><br><span class="line">          <span class="attr">articleedittype</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">          <span class="attr">content</span>: oPost.<span class="property">body</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> formData = querystring.<span class="title function_">stringify</span>(oBody);</span><br><span class="line"><span class="keyword">var</span> contentLength = formData.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> createPostOptions = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,  </span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Content-Length&quot;</span>: contentLength,</span><br><span class="line">            <span class="string">&quot;origin&quot;</span> :<span class="string">&quot;https://mp.csdn.net&quot;</span>,</span><br><span class="line">            <span class="string">&quot;referer&quot;</span> :<span class="string">&quot;https://mp.csdn.net/mdeditor&quot;</span>,</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span> :<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cookie&quot;</span>: config.<span class="property">cookie</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">body</span>: formData</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve,reject</span>)&#123;</span><br><span class="line">      <span class="keyword">var</span> requestC = request.<span class="title function_">defaults</span>(&#123;<span class="attr">jar</span>: <span class="literal">true</span>&#125;);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Step1: create post via url: &quot;</span>   url );</span><br><span class="line"></span><br><span class="line">      <span class="title function_">requestC</span>(createPostOptions,<span class="keyword">function</span>(<span class="params">error,response,body</span>)&#123;</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">if</span>(error)&#123;</span><br><span class="line">          <span class="title function_">reject</span>(error);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;response: &quot;</span>   body);</span><br><span class="line">       <span class="title function_">resolve</span>(body);</span><br><span class="line">      &#125;); </span><br><span class="line">     &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = createPost;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getIssue</span>(<span class="params">issueNumber</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">&quot;https://api.github.com/repos/i042416/KnowlegeRepository/issues/&quot;</span>   issueNumber;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> getIssueOptions = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        <span class="attr">json</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve,reject</span>)&#123;</span><br><span class="line">      <span class="keyword">var</span> requestC = request.<span class="title function_">defaults</span>(&#123;<span class="attr">jar</span>: <span class="literal">true</span>&#125;);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Step1: get issue detail via url: &quot;</span>   url );</span><br><span class="line"></span><br><span class="line">      <span class="title function_">requestC</span>(getIssueOptions,<span class="keyword">function</span>(<span class="params">error,response,body</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(error)&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;error occurred: &quot;</span>   error);</span><br><span class="line">          <span class="title function_">reject</span>(error);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;title:&quot;</span>   body.<span class="property">title</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;body: &quot;</span>   body.<span class="property">body</span>);</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">0</span>; i &lt; body.<span class="property">labels</span>.<span class="property">length</span>; i  )&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;label: &quot;</span>   body.<span class="property">labels</span>[i].<span class="property">name</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">resolve</span>(body);</span><br><span class="line">      &#125;); </span><br><span class="line">     &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = getIssue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> readIssue = <span class="built_in">require</span>(<span class="string">&quot;./readIssueMod&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> createPost = <span class="built_in">require</span>(<span class="string">&quot;./createPostMod&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">readIssue</span>(<span class="number">2215</span>).<span class="title function_">then</span>(createPost).<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;error: &quot;</span>   error)&#125;);</span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/ae4fe3c6ccf7">https://www.jianshu.com/p/ae4fe3c6ccf7</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://cloudswave.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>开始使用Github Issues写博客</title>
    <link href="https://cloudswave.github.io/2022/10/28/4/"/>
    <id>https://cloudswave.github.io/2022/10/28/4/</id>
    <published>2022-10-28T11:05:23.000Z</published>
    <updated>2022-10-29T22:53:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul><li>简书频繁下架文章，每天只能发布两篇</li><li>CSDN页面太杂，写作不够专注，客户端不好用</li><li>Github Web版和App都非常简洁实用，可以随意写文章不需要担心审核问题</li><li>可以通过Actions工作流来同步文章到Github Pages和其他博客平台</li><li>学习Github Action开发，学习机遇Github到自动化构建部署流程</li></ul><!--增加下面这个more注释为hexo提取本文摘要防止hexo博客主页显示全文--><span id="more"></span><h2 id="需求和实现"><a href="#需求和实现" class="headerlink" title="需求和实现"></a>需求和实现</h2><h3 id="自动生成README目录"><a href="#自动生成README目录" class="headerlink" title="自动生成README目录"></a>自动生成README目录</h3><p>仿照<a href="https://github.com/cloudswave/blog/blob/master/.github/workflows/issue2readme.yaml">.github/workflows/issue2readme.yaml</a>在仓库里增加workflows配置文件进行修改，<a href="https://github.com/bxb100/issueblog#readme">说明文档</a>，最后生成<a href="https://github.com/cloudswave/blog/#readme">效果</a></p><h3 id="自动构建Hexo发布到Github-Pages"><a href="#自动构建Hexo发布到Github-Pages" class="headerlink" title="自动构建Hexo发布到Github Pages"></a>自动构建Hexo发布到Github Pages</h3><p>仿照<a href="https://github.com/cloudswave/blog/blob/master/.github/workflows/issue2hexo.yaml">.github/workflows/issue2hexo.yaml</a>在仓库里增加workflows配置文件，根据自身情况修改环境变量，最后发布的效果可查看<a href="http://cloudswave.github.io">我的Hexo博客</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">env:</span><br><span class="line">  # github pages repo</span><br><span class="line">  PUBLISH_REPOSITORY: cloudswave/cloudswave.github.io</span><br><span class="line">  # GITHUB TOKEN 可以试一试将secrets.BLOG_TOKEN可以直接改成github内置的密钥secrets.BLOG_TOKEN，但是我的会报如下图的权限错误</span><br><span class="line">  GITHUB_TOKEN: $&#123;&#123; secrets.BLOG_TOKEN &#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/5915548/198711776-db2ff7fc-f7ec-4eec-b67f-8a1d162a1964.png" alt="image"></p><p>BLOG_TOKEN生成指导：</p><ol><li><p><a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token#creating-a-personal-access-token-classic">creating-a-personal-access-token-classic</a>不知道选那些权限选择的时候全部选上吧<br><img src="https://user-images.githubusercontent.com/5915548/198711260-eb252739-105f-472b-8894-a016fc1d28ad.png" alt="image"></p></li><li><p><a href="https://docs.github.com/cn/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository">creating-encrypted-secrets-for-a-repository</a></p></li></ol><p><img src="https://user-images.githubusercontent.com/5915548/198710315-f180cdb0-baa8-4c16-aa92-fed599bd354f.png" alt="image"><br><strong>另外还需要Pages仓库的权限配置</strong>，如下图：<br><img src="https://user-images.githubusercontent.com/5915548/198712542-b1c8edfc-4170-426b-885c-0ba691a6934b.png" alt="image"><br><img src="https://user-images.githubusercontent.com/5915548/198712367-39502701-4d41-4468-97b7-9b808b92ae62.png" alt="image"></p><h3 id="自动发布文章到其他博客平台用来引流"><a href="#自动发布文章到其他博客平台用来引流" class="headerlink" title="自动发布文章到其他博客平台用来引流"></a>自动发布文章到其他博客平台用来引流</h3><ul><li>发布到CSDN, 参考<a href="https://github.com/cloudswave/blog/blob/master/.github/workflows/issue2csdn.yml">issue2csdn</a>增加workflows配置文件，<a href="https://github.com/cloudswave/issue2csdn#readme">说明文档</a></li></ul><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>如果你只想在issue添加Miestone为publish的时候才发布更新，可以修改yml里的触发器，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">on:</span><br><span class="line">  issues:</span><br><span class="line">    # Sufficient to trigger this workflow when an issue is milestoned</span><br><span class="line">    types: [milestoned]</span><br><span class="line">    # types: [unlabeled, labeled, edited, milestoned]</span><br></pre></td></tr></table></figure><p>可以在Actions页面查看workflow执行日志和禁止某个workflow执行<br><img width="805" alt="action-guide" src="https://user-images.githubusercontent.com/5915548/198864861-03313485-2a81-4f76-ba44-ec24254a619a.png"></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://github.com/Solybum/hexo-deploy">https://github.com/Solybum/hexo-deploy</a></li><li><a href="https://github.com/zenghongtu/github-issue-to-hexo">https://github.com/zenghongtu/github-issue-to-hexo</a></li><li><a href="https://github.com/onblog/BlogHelper">https://github.com/onblog/BlogHelper</a></li><li><a href="https://github.com/JoeyBling/yilia-plus-demo">https://github.com/JoeyBling/yilia-plus-demo</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;简书频繁下架文章，每天只能发布两篇&lt;/li&gt;
&lt;li&gt;CSDN页面太杂，写作不够专注，客户端不好用&lt;/li&gt;
&lt;li&gt;Github Web版和App都非常简洁实用，可以随意写文章不需要担心审核问题&lt;/li&gt;
&lt;li&gt;可以通过Actions工作流来同步文章到Github Pages和其他博客平台&lt;/li&gt;
&lt;li&gt;学习Github Action开发，学习机遇Github到自动化构建部署流程&lt;/li&gt;
&lt;/ul&gt;
&lt;!--增加下面这个more注释为hexo提取本文摘要防止hexo博客主页显示全文--&gt;
    
    </summary>
    
    
      <category term="Top" scheme="https://cloudswave.github.io/tags/Top/"/>
    
  </entry>
  
  <entry>
    <title>测试issue2blog</title>
    <link href="https://cloudswave.github.io/2022/10/28/1/"/>
    <id>https://cloudswave.github.io/2022/10/28/1/</id>
    <published>2022-10-28T03:37:45.000Z</published>
    <updated>2022-10-30T01:30:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>一级标题:    # 标题<br>二级标题:   ## 标题<br>三级标题:     ### 标题<br>四级标题:    #### 标题<br>五级标题:     #### 标题</p><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h2><p><strong>加粗</strong></p><span id="more"></span><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://www.imgurl.org/static/images/luoye.jpg" alt="落叶"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="http://baidu.com">百度</a></p><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><p><em>斜体</em></p><h2 id="粗斜体"><a href="#粗斜体" class="headerlink" title="粗斜体"></a>粗斜体</h2><p><strong><em>粗斜体</em></strong></p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code.</span><br></pre></td></tr></table></figure><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>Hello</p><!--csdn-article-id:127602194-->]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;p&gt;一级标题:    # 标题&lt;br&gt;二级标题:   ## 标题&lt;br&gt;三级标题:     ### 标题&lt;br&gt;四级标题:    #### 标题&lt;br&gt;五级标题:     #### 标题&lt;/p&gt;
&lt;h2 id=&quot;加粗&quot;&gt;&lt;a href=&quot;#加粗&quot; class=&quot;headerlink&quot; title=&quot;加粗&quot;&gt;&lt;/a&gt;加粗&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;加粗&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="测试" scheme="https://cloudswave.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
